syntax = "proto3";

package eigenlayer.sidecar.v1.health;

option go_package = "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/health";

import "google/api/annotations.proto";
import "annotations/annotations.proto";
import "google/protobuf/descriptor.proto";

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
}

message ReadyRequest {}

message ReadyResponse {
  bool ready = 1;
}

service Health {
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {
    option (eigenlayer.annotations.isPublic) = true;
    option (google.api.http) = {
      get: "/v1/health"
    };
  }

  rpc ReadyCheck(ReadyRequest) returns (ReadyResponse) {
    option (google.api.http) = {
      get: "/v1/ready"
    };
  }
}
