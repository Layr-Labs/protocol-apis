syntax = "proto3";

package eigenlayer.sidecar.v1.protocol;

option go_package = "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/protocol";

import "eigenlayer/sidecar/v1/eigenState/eigenState.proto";
import "google/api/annotations.proto";
import "eigenlayer/sidecar/v1/common/types.proto";
import "google/protobuf/timestamp.proto";


message StakerShare {
  string strategy = 1;
  string shares = 2;

  // Operator the staker has delegated to if present
  optional string operator_address = 3;
  // The operator could be regietered with 0 or many AVSs
  repeated string avs_addresses = 4;
  
  // Historical data fields (only populated when show_historical=true)
  optional uint64 block_height = 5;
  optional google.protobuf.Timestamp block_time = 6;
  optional string transaction_hash = 7;
  optional uint64 log_index = 8;
}

message Strategy {
  string strategy = 1;
  string totalStake = 2;
  repeated string rewardedTokens = 3;
}

message StakerStrategy {
  string stakedAmount = 1;
  Strategy strategy = 2;
}

message QueuedStrategyWithdrawal {
  string strategy = 1;
  string amount = 2;
  uint64 blockNumber = 3;
  string transactionHash = 4;
  uint64 logIndex = 5;
}

message StakerWithdrawal {
  string staker = 1;
  string amount = 2;
  uint64 blockNumber = 3;
}

message QueueStakerStrategyWithdrawal {
  string strategy = 1;
  repeated StakerWithdrawal withdrawals = 2;
}
