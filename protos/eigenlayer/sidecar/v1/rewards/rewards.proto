syntax = "proto3";

package eigenlayer.sidecar.v1.rewards;

option go_package = "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/rewards";

import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "eigenlayer/sidecar/v1/rewards/common.proto";
import "eigenlayer/sidecar/v1/common/types.proto";


message GetRewardsRootRequest {
  uint64 block_height = 1;
}
message GetRewardsRootResponse {
  DistributionRoot rewards_root = 1;
}


message GenerateRewardsRequest {
  string cutoff_date = 1;
  bool respond_with_rewards_data = 2;
  bool wait_for_complete = 3;
}
message GenerateRewardsResponse {
  string cutoff_date = 1;

  // Returned if respondWithRewardsData is true in the request
  optional Reward rewards = 2;
  bool queued = 3;
}


message GenerateStakerOperatorsRequest {
  string cutoff_date = 1;
  bool wait_for_complete = 2;
}
message GenerateStakerOperatorsResponse {
  bool queued = 1;
}


message BackfillStakerOperatorsRequest {
  bool wait_for_complete = 1;
}
message BackfillStakerOperatorsResponse {
  bool queued = 1;
}


message GenerateRewardsRootRequest {
  // The date to calculate rewards up to, exclusive
  string cutoff_date = 1;
}
message GenerateRewardsRootResponse {
  string rewards_root = 1;
  string rewards_calc_end_date = 2;
}


message GetRewardsForSnapshotRequest {
  string snapshot = 1;
  optional string earner = 2;
}
message GetRewardsForSnapshotResponse {
  repeated Reward rewards = 1;
}


message GetRewardsForDistributionRootRequest {
  uint64 root_index = 1;
}
message GetRewardsForDistributionRootResponse {
  repeated Reward rewards = 1;
}


message GetAttributableRewardsForSnapshotRequest {
  string snapshot = 1;
}
message GetAttributableRewardsForSnapshotResponse {
  repeated AttributableReward rewards = 1;
}


message GetAttributableRewardsForDistributionRootRequest {
  string distribution_root = 1;
}
message GetAttributableRewardsForDistributionRootResponse {
  repeated AttributableReward rewards = 1;
}


message GetRewardsByAvsForDistributionRootRequest {
  uint64 root_index = 1;
  common.Pagination pagination = 2;
}
message GetRewardsByAvsForDistributionRootResponse {
  repeated AvsReward rewards = 1;
  common.Pagination next_page = 2;
}


message GenerateClaimProofRequest {
  string earner_address = 1;
  repeated string tokens = 2;
  // if root_index is omitted, the current active root will be used
  optional google.protobuf.Int64Value root_index = 3;
}
message GenerateClaimProofResponse {
  Proof proof = 1;
}


message GetClaimableRewardsRequest {
  string earner_address = 1;
  uint64 block_height = 2;
}
message GetClaimableRewardsResponse {
  repeated Reward rewards = 1;
}


message GetTotalClaimedRewardsRequest {
  string earner_address = 1;
  optional uint64 block_height = 2;
}
message GetTotalClaimedRewardsResponse {
  repeated TotalClaimedReward rewards = 1;
}


message GetAvailableRewardsTokensRequest {
  string earner_address = 1;
  optional uint64 block_height = 2;
}
message GetAvailableRewardsTokensResponse {
  repeated string tokens = 1;
}


message GetSummarizedRewardsForEarnerRequest {
  string earner_address = 1;
  optional uint64 block_height = 2;
}
message GetSummarizedRewardsForEarnerResponse {
  repeated SummarizedEarnerReward rewards = 1;
}


message GetClaimedRewardsByBlockRequest {
  uint64 block_height = 1;
}
message GetClaimedRewardsByBlockResponse {
  repeated ClaimedReward rewards = 1;
}


message ListDistributionRootsRequest {
  optional uint64 block_height = 1;
}
message ListDistributionRootsResponse {
  repeated DistributionRoot distribution_roots = 1;
}


message ListClaimedRewardsByBlockRangeRequest {
  string earner_address = 1;
  uint64 start_block_height = 2;
  uint64 end_block_height = 3;
}
message ListClaimedRewardsByBlockRangeResponse {
  repeated ClaimedReward rewards = 1;
}


message ListEarnerLifetimeRewardsRequest {
  string earnerAddress = 1;
  optional uint64 blockHeight = 2;
  optional eigenlayer.sidecar.v1.common.Pagination pagination = 3;
}
message ListEarnerLifetimeRewardsResponse {
  repeated RewardAmount rewards = 1;
  optional eigenlayer.sidecar.v1.common.Pagination nextPage = 2;
}


message ListEarnerHistoricalRewardsRequest {
  string earnerAddress = 1;
  optional uint64 startBlockHeight = 2;
  optional uint64 endBlockHeight = 3;
  repeated string tokens = 4;
  optional eigenlayer.sidecar.v1.common.Pagination pagination = 5;
}
message ListEarnerHistoricalRewardsResponse {
  repeated HistoricalReward rewards = 1;
  optional eigenlayer.sidecar.v1.common.Pagination nextPage = 2;
}
