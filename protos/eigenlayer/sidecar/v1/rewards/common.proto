syntax = "proto3";

package eigenlayer.sidecar.v1.rewards;

option go_package = "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/rewards";

import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

message EarnerLeaf {
  string earner = 1;
  bytes earner_token_root = 2;
}

message TokenLeaf {
  string token = 1;
  string cumulative_earnings = 2;
}

// Proof closely models the IRewardsCoordinatorRewardsMerkleClaim interface found
// in the RewardsCoordinator contract
message Proof {
  bytes root = 1;
  uint32 root_index = 2;
  uint32 earner_index = 3;
  bytes earner_tree_proof = 4;
  EarnerLeaf earner_leaf = 5;
  repeated uint32 token_indices = 6;
  repeated bytes token_tree_proofs = 7;
  repeated TokenLeaf token_leaves = 8;
}

enum RewardType {
  REWARD_TYPE_AVS = 0;
  REWARD_TYPE_FOR_ALL = 1;
  REWARD_TYPE_FOR_ALL_EARNERS = 2;
}

message Reward {
  string earner = 1;
  string token = 2;
  string amount = 3;
  string snapshot = 4;
}

message AttributableReward {
  string earner = 1;
  string operator = 2;
  string avs = 3;
  string token = 4;
  string strategy = 5;
  string multiplier = 6;
  string amount = 7;
  string shares = 8;
  string reward_hash = 9;
  string snapshot = 10;
  RewardType reward_type = 11;
}

message AvsReward {
  string earner = 1;
  string avs = 2;
  string token = 3;
  string amount = 4;
  string reward_hash = 5;
  string snapshot = 6;
  RewardType reward_type = 7;
}

message DistributionRoot {
  string root = 1;
  uint64 root_index = 2;
  google.protobuf.Timestamp rewards_calculation_end = 3;
  string rewards_calculation_end_unit = 4;
  google.protobuf.Timestamp activated_at = 5;
  string activated_at_unit = 6;
  uint64 created_at_block_number = 7;
  string transaction_hash = 8;
  uint64 block_height = 9;
  uint64 log_index = 10;
  bool disabled = 11;
}

message TotalClaimedReward {
  string earner = 1;
  string token = 2;
  string amount = 3;
}


message SummarizedEarnerReward {
  string token = 1;

  // Rewards that have been earned but not necessarily activated yet
  string earned = 2;

  // total rewards that are claimable (does not account for claimed)
  string active = 3;

  // total rewards that have been claimed
  string claimed = 4;

  // rewards that can be claimed at the block height
  string claimable = 5;
}

message ClaimedReward {
  string earner = 1;
  string claimer = 2;
  string token = 3;
  string amount = 4;
  string distribution_root = 5;
  uint64 block_number = 6;
  string recipient = 7;
}

message RewardAmount {
  string token = 1;
  string amount = 2;
}

message HistoricalReward {
  message HistoricalRewardAmount {
    string amount = 1;
    string token = 2;
  }

  string token = 1;
  repeated HistoricalRewardAmount amounts = 2;
}
