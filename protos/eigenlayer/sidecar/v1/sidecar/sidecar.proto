syntax = "proto3";

package eigenlayer.sidecar.v1.sidecar;

option go_package = "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/sidecar";

import "google/api/annotations.proto";

message GetBlockHeightRequest {
  bool verified = 1;
}

message GetBlockHeightResponse {
  uint64 blockNumber = 1;
  string blockHash = 2;
}

message GetStateRootRequest {
  uint64 blockNumber = 1;
}

message GetStateRootResponse {
  uint64 ethBlockNumber = 1;
  string ethBlockHash = 2;
  string stateRoot = 3;
}

message AboutRequest {}

message AboutResponse {
  string version = 1;
  string commit = 2;
  string chain = 3;
}

message LoadContractRequest {
  string address = 1;
  // ABI of the contract in JSON format
  string abi = 2;
  // Bytecode hash of the contract (optional, will be fetched if not provided)
  string bytecodeHash = 3;
  // Block number for proxy association (required if associate_to_proxy is set)
  uint64 blockNumber = 4;
  // Address of the proxy contract to associate with (optional)
  string associateToProxy = 5;
  // Whether to load from a batch file (mutually exclusive with other fields)
  bool batch = 6;
  // Path to the batch file (required if batch is true)
  string fromFile = 7;
}

message LoadContractResponse {
  // Address of the loaded contract
  string address = 1;
  // Whether the operation was successful
  bool success = 2;
  // Error message if the operation failed
  string error = 3;
  // Number of contracts loaded if batch mode was used
  uint32 contractsLoaded = 4;
}
