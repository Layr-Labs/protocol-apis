// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: eigenlayer/sidecar/v1/events/events.proto

package events

import (
	eventTypes "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/eventTypes"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamEigenStateChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamEigenStateChangesRequest) Reset() {
	*x = StreamEigenStateChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEigenStateChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEigenStateChangesRequest) ProtoMessage() {}

func (x *StreamEigenStateChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEigenStateChangesRequest.ProtoReflect.Descriptor instead.
func (*StreamEigenStateChangesRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_events_events_proto_rawDescGZIP(), []int{0}
}

type StreamEigenStateChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64                         `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	StateRoot   *eventTypes.StateRoot          `protobuf:"bytes,2,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	Changes     []*eventTypes.EigenStateChange `protobuf:"bytes,3,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *StreamEigenStateChangesResponse) Reset() {
	*x = StreamEigenStateChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEigenStateChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEigenStateChangesResponse) ProtoMessage() {}

func (x *StreamEigenStateChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEigenStateChangesResponse.ProtoReflect.Descriptor instead.
func (*StreamEigenStateChangesResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_events_events_proto_rawDescGZIP(), []int{1}
}

func (x *StreamEigenStateChangesResponse) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *StreamEigenStateChangesResponse) GetStateRoot() *eventTypes.StateRoot {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *StreamEigenStateChangesResponse) GetChanges() []*eventTypes.EigenStateChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

type StreamIndexedBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In addition to block data, include EigenState changes related to the block
	IncludeStateChanges bool `protobuf:"varint,1,opt,name=include_state_changes,json=includeStateChanges,proto3" json:"include_state_changes,omitempty"`
}

func (x *StreamIndexedBlocksRequest) Reset() {
	*x = StreamIndexedBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIndexedBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIndexedBlocksRequest) ProtoMessage() {}

func (x *StreamIndexedBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIndexedBlocksRequest.ProtoReflect.Descriptor instead.
func (*StreamIndexedBlocksRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_events_events_proto_rawDescGZIP(), []int{2}
}

func (x *StreamIndexedBlocksRequest) GetIncludeStateChanges() bool {
	if x != nil {
		return x.IncludeStateChanges
	}
	return false
}

type StreamIndexedBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     *eventTypes.Block              `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	StateRoot *eventTypes.StateRoot          `protobuf:"bytes,2,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	Changes   []*eventTypes.EigenStateChange `protobuf:"bytes,3,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *StreamIndexedBlocksResponse) Reset() {
	*x = StreamIndexedBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamIndexedBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIndexedBlocksResponse) ProtoMessage() {}

func (x *StreamIndexedBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIndexedBlocksResponse.ProtoReflect.Descriptor instead.
func (*StreamIndexedBlocksResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_events_events_proto_rawDescGZIP(), []int{3}
}

func (x *StreamIndexedBlocksResponse) GetBlock() *eventTypes.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *StreamIndexedBlocksResponse) GetStateRoot() *eventTypes.StateRoot {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *StreamIndexedBlocksResponse) GetChanges() []*eventTypes.EigenStateChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

var File_eigenlayer_sidecar_v1_events_events_proto protoreflect.FileDescriptor

var file_eigenlayer_sidecar_v1_events_events_proto_rawDesc = []byte{
	0x0a, 0x29, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x65, 0x69, 0x67,
	0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x20, 0x0a, 0x1e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x1f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x69, 0x67,
	0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x4a, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x12, 0x4c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x32, 0x91,
	0x03, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xca, 0x01, 0x0a, 0x17, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x3c, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x69, 0x67, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2d, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2d, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x30, 0x01, 0x12, 0xb9, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x38,
	0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x2d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x30, 0x01, 0x42, 0x8f, 0x02, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x72, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0xa2, 0x02, 0x04, 0x45, 0x53, 0x56, 0x45, 0xaa, 0x02, 0x1c, 0x45, 0x69, 0x67, 0x65,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x56,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0xca, 0x02, 0x1c, 0x45, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31,
	0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0xe2, 0x02, 0x28, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31, 0x5c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x1f, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x3a,
	0x3a, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eigenlayer_sidecar_v1_events_events_proto_rawDescOnce sync.Once
	file_eigenlayer_sidecar_v1_events_events_proto_rawDescData = file_eigenlayer_sidecar_v1_events_events_proto_rawDesc
)

func file_eigenlayer_sidecar_v1_events_events_proto_rawDescGZIP() []byte {
	file_eigenlayer_sidecar_v1_events_events_proto_rawDescOnce.Do(func() {
		file_eigenlayer_sidecar_v1_events_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_eigenlayer_sidecar_v1_events_events_proto_rawDescData)
	})
	return file_eigenlayer_sidecar_v1_events_events_proto_rawDescData
}

var file_eigenlayer_sidecar_v1_events_events_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_eigenlayer_sidecar_v1_events_events_proto_goTypes = []any{
	(*StreamEigenStateChangesRequest)(nil),  // 0: eigenlayer.sidecar.v1.events.StreamEigenStateChangesRequest
	(*StreamEigenStateChangesResponse)(nil), // 1: eigenlayer.sidecar.v1.events.StreamEigenStateChangesResponse
	(*StreamIndexedBlocksRequest)(nil),      // 2: eigenlayer.sidecar.v1.events.StreamIndexedBlocksRequest
	(*StreamIndexedBlocksResponse)(nil),     // 3: eigenlayer.sidecar.v1.events.StreamIndexedBlocksResponse
	(*eventTypes.StateRoot)(nil),            // 4: eigenlayer.sidecar.v1.eventTypes.StateRoot
	(*eventTypes.EigenStateChange)(nil),     // 5: eigenlayer.sidecar.v1.eventTypes.EigenStateChange
	(*eventTypes.Block)(nil),                // 6: eigenlayer.sidecar.v1.eventTypes.Block
}
var file_eigenlayer_sidecar_v1_events_events_proto_depIdxs = []int32{
	4, // 0: eigenlayer.sidecar.v1.events.StreamEigenStateChangesResponse.state_root:type_name -> eigenlayer.sidecar.v1.eventTypes.StateRoot
	5, // 1: eigenlayer.sidecar.v1.events.StreamEigenStateChangesResponse.changes:type_name -> eigenlayer.sidecar.v1.eventTypes.EigenStateChange
	6, // 2: eigenlayer.sidecar.v1.events.StreamIndexedBlocksResponse.block:type_name -> eigenlayer.sidecar.v1.eventTypes.Block
	4, // 3: eigenlayer.sidecar.v1.events.StreamIndexedBlocksResponse.state_root:type_name -> eigenlayer.sidecar.v1.eventTypes.StateRoot
	5, // 4: eigenlayer.sidecar.v1.events.StreamIndexedBlocksResponse.changes:type_name -> eigenlayer.sidecar.v1.eventTypes.EigenStateChange
	0, // 5: eigenlayer.sidecar.v1.events.Events.StreamEigenStateChanges:input_type -> eigenlayer.sidecar.v1.events.StreamEigenStateChangesRequest
	2, // 6: eigenlayer.sidecar.v1.events.Events.StreamIndexedBlocks:input_type -> eigenlayer.sidecar.v1.events.StreamIndexedBlocksRequest
	1, // 7: eigenlayer.sidecar.v1.events.Events.StreamEigenStateChanges:output_type -> eigenlayer.sidecar.v1.events.StreamEigenStateChangesResponse
	3, // 8: eigenlayer.sidecar.v1.events.Events.StreamIndexedBlocks:output_type -> eigenlayer.sidecar.v1.events.StreamIndexedBlocksResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_eigenlayer_sidecar_v1_events_events_proto_init() }
func file_eigenlayer_sidecar_v1_events_events_proto_init() {
	if File_eigenlayer_sidecar_v1_events_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEigenStateChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*StreamEigenStateChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*StreamIndexedBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_events_events_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*StreamIndexedBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eigenlayer_sidecar_v1_events_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eigenlayer_sidecar_v1_events_events_proto_goTypes,
		DependencyIndexes: file_eigenlayer_sidecar_v1_events_events_proto_depIdxs,
		MessageInfos:      file_eigenlayer_sidecar_v1_events_events_proto_msgTypes,
	}.Build()
	File_eigenlayer_sidecar_v1_events_events_proto = out.File
	file_eigenlayer_sidecar_v1_events_events_proto_rawDesc = nil
	file_eigenlayer_sidecar_v1_events_events_proto_goTypes = nil
	file_eigenlayer_sidecar_v1_events_events_proto_depIdxs = nil
}
