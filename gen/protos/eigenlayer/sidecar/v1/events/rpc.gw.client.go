// Code generated by protoc-gen-grpc-gateway-client. DO NOT EDIT.
// source: eigenlayer/sidecar/v1/events/rpc.proto

package events

import (
	context "context"
	gateway "github.com/akuity/grpc-gateway-client/pkg/grpc/gateway"
)

// EventsGatewayClient is the interface for Events service client.
type EventsGatewayClient interface {
	StreamEigenStateChanges(context.Context, *StreamEigenStateChangesRequest) (<-chan *StreamEigenStateChangesResponse, <-chan error, error)
	StreamIndexedBlocks(context.Context, *StreamIndexedBlocksRequest) (<-chan *StreamIndexedBlocksResponse, <-chan error, error)
}

func NewEventsGatewayClient(c gateway.Client) EventsGatewayClient {
	return &eventsGatewayClient{
		gwc: c,
	}
}

type eventsGatewayClient struct {
	gwc gateway.Client
}

func (c *eventsGatewayClient) StreamEigenStateChanges(ctx context.Context, req *StreamEigenStateChangesRequest) (<-chan *StreamEigenStateChangesResponse, <-chan error, error) {
	gwReq := c.gwc.NewRequest("POST", "/events/v1/stream-eigen-state-changes")
	gwReq.SetBody(req)
	return gateway.DoStreamingRequest[StreamEigenStateChangesResponse](ctx, c.gwc, gwReq)
}

func (c *eventsGatewayClient) StreamIndexedBlocks(ctx context.Context, req *StreamIndexedBlocksRequest) (<-chan *StreamIndexedBlocksResponse, <-chan error, error) {
	gwReq := c.gwc.NewRequest("POST", "/events/v1/stream-indexed-blocks")
	gwReq.SetBody(req)
	return gateway.DoStreamingRequest[StreamIndexedBlocksResponse](ctx, c.gwc, gwReq)
}
