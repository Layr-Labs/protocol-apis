// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: eigenlayer/sidecar/v1/protocol/protocol.proto

package protocol

import (
	common "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/common"
	eigenState "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/eigenState"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRegisteredAvsForOperatorRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OperatorAddress string                 `protobuf:"bytes,1,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	BlockHeight     *uint64                `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetRegisteredAvsForOperatorRequest) Reset() {
	*x = GetRegisteredAvsForOperatorRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegisteredAvsForOperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredAvsForOperatorRequest) ProtoMessage() {}

func (x *GetRegisteredAvsForOperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredAvsForOperatorRequest.ProtoReflect.Descriptor instead.
func (*GetRegisteredAvsForOperatorRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *GetRegisteredAvsForOperatorRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *GetRegisteredAvsForOperatorRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type GetRegisteredAvsForOperatorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvsAddresses  []string               `protobuf:"bytes,1,rep,name=avs_addresses,json=avsAddresses,proto3" json:"avs_addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegisteredAvsForOperatorResponse) Reset() {
	*x = GetRegisteredAvsForOperatorResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegisteredAvsForOperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredAvsForOperatorResponse) ProtoMessage() {}

func (x *GetRegisteredAvsForOperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredAvsForOperatorResponse.ProtoReflect.Descriptor instead.
func (*GetRegisteredAvsForOperatorResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *GetRegisteredAvsForOperatorResponse) GetAvsAddresses() []string {
	if x != nil {
		return x.AvsAddresses
	}
	return nil
}

type GetDelegatedStrategiesForOperatorRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OperatorAddress string                 `protobuf:"bytes,1,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	BlockHeight     *uint64                `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetDelegatedStrategiesForOperatorRequest) Reset() {
	*x = GetDelegatedStrategiesForOperatorRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegatedStrategiesForOperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegatedStrategiesForOperatorRequest) ProtoMessage() {}

func (x *GetDelegatedStrategiesForOperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegatedStrategiesForOperatorRequest.ProtoReflect.Descriptor instead.
func (*GetDelegatedStrategiesForOperatorRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *GetDelegatedStrategiesForOperatorRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *GetDelegatedStrategiesForOperatorRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type GetDelegatedStrategiesForOperatorResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StrategyAddresses []string               `protobuf:"bytes,1,rep,name=strategy_addresses,json=strategyAddresses,proto3" json:"strategy_addresses,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetDelegatedStrategiesForOperatorResponse) Reset() {
	*x = GetDelegatedStrategiesForOperatorResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegatedStrategiesForOperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegatedStrategiesForOperatorResponse) ProtoMessage() {}

func (x *GetDelegatedStrategiesForOperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegatedStrategiesForOperatorResponse.ProtoReflect.Descriptor instead.
func (*GetDelegatedStrategiesForOperatorResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *GetDelegatedStrategiesForOperatorResponse) GetStrategyAddresses() []string {
	if x != nil {
		return x.StrategyAddresses
	}
	return nil
}

type GetOperatorDelegatedStakeForStrategyRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OperatorAddress string                 `protobuf:"bytes,1,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	StrategyAddress string                 `protobuf:"bytes,2,opt,name=strategy_address,json=strategyAddress,proto3" json:"strategy_address,omitempty"`
	BlockHeight     *uint64                `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetOperatorDelegatedStakeForStrategyRequest) Reset() {
	*x = GetOperatorDelegatedStakeForStrategyRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorDelegatedStakeForStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorDelegatedStakeForStrategyRequest) ProtoMessage() {}

func (x *GetOperatorDelegatedStakeForStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorDelegatedStakeForStrategyRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorDelegatedStakeForStrategyRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *GetOperatorDelegatedStakeForStrategyRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *GetOperatorDelegatedStakeForStrategyRequest) GetStrategyAddress() string {
	if x != nil {
		return x.StrategyAddress
	}
	return ""
}

func (x *GetOperatorDelegatedStakeForStrategyRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type GetOperatorDelegatedStakeForStrategyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shares        string                 `protobuf:"bytes,1,opt,name=shares,proto3" json:"shares,omitempty"`
	AvsAddresses  []string               `protobuf:"bytes,2,rep,name=avs_addresses,json=avsAddresses,proto3" json:"avs_addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperatorDelegatedStakeForStrategyResponse) Reset() {
	*x = GetOperatorDelegatedStakeForStrategyResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorDelegatedStakeForStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorDelegatedStakeForStrategyResponse) ProtoMessage() {}

func (x *GetOperatorDelegatedStakeForStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorDelegatedStakeForStrategyResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorDelegatedStakeForStrategyResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *GetOperatorDelegatedStakeForStrategyResponse) GetShares() string {
	if x != nil {
		return x.Shares
	}
	return ""
}

func (x *GetOperatorDelegatedStakeForStrategyResponse) GetAvsAddresses() []string {
	if x != nil {
		return x.AvsAddresses
	}
	return nil
}

type GetDelegatedStakersForOperatorRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OperatorAddress string                 `protobuf:"bytes,1,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	BlockHeight     *uint64                `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	Pagination      *common.Pagination     `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetDelegatedStakersForOperatorRequest) Reset() {
	*x = GetDelegatedStakersForOperatorRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegatedStakersForOperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegatedStakersForOperatorRequest) ProtoMessage() {}

func (x *GetDelegatedStakersForOperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegatedStakersForOperatorRequest.ProtoReflect.Descriptor instead.
func (*GetDelegatedStakersForOperatorRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *GetDelegatedStakersForOperatorRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *GetDelegatedStakersForOperatorRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

func (x *GetDelegatedStakersForOperatorRequest) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetDelegatedStakersForOperatorResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StakerAddresses []string               `protobuf:"bytes,1,rep,name=staker_addresses,json=stakerAddresses,proto3" json:"staker_addresses,omitempty"`
	NextPage        *common.Pagination     `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3,oneof" json:"next_page,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetDelegatedStakersForOperatorResponse) Reset() {
	*x = GetDelegatedStakersForOperatorResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDelegatedStakersForOperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDelegatedStakersForOperatorResponse) ProtoMessage() {}

func (x *GetDelegatedStakersForOperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDelegatedStakersForOperatorResponse.ProtoReflect.Descriptor instead.
func (*GetDelegatedStakersForOperatorResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *GetDelegatedStakersForOperatorResponse) GetStakerAddresses() []string {
	if x != nil {
		return x.StakerAddresses
	}
	return nil
}

func (x *GetDelegatedStakersForOperatorResponse) GetNextPage() *common.Pagination {
	if x != nil {
		return x.NextPage
	}
	return nil
}

type GetStakerSharesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StakerAddress  string                 `protobuf:"bytes,1,opt,name=staker_address,json=stakerAddress,proto3" json:"staker_address,omitempty"`
	BlockHeight    *uint64                `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	Strategy       *string                `protobuf:"bytes,3,opt,name=strategy,proto3,oneof" json:"strategy,omitempty"`
	ShowHistorical *bool                  `protobuf:"varint,4,opt,name=show_historical,json=showHistorical,proto3,oneof" json:"show_historical,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetStakerSharesRequest) Reset() {
	*x = GetStakerSharesRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStakerSharesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakerSharesRequest) ProtoMessage() {}

func (x *GetStakerSharesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStakerSharesRequest.ProtoReflect.Descriptor instead.
func (*GetStakerSharesRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *GetStakerSharesRequest) GetStakerAddress() string {
	if x != nil {
		return x.StakerAddress
	}
	return ""
}

func (x *GetStakerSharesRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

func (x *GetStakerSharesRequest) GetStrategy() string {
	if x != nil && x.Strategy != nil {
		return *x.Strategy
	}
	return ""
}

func (x *GetStakerSharesRequest) GetShowHistorical() bool {
	if x != nil && x.ShowHistorical != nil {
		return *x.ShowHistorical
	}
	return false
}

type GetStakerSharesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shares        []*StakerShare         `protobuf:"bytes,1,rep,name=shares,proto3" json:"shares,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStakerSharesResponse) Reset() {
	*x = GetStakerSharesResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStakerSharesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakerSharesResponse) ProtoMessage() {}

func (x *GetStakerSharesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStakerSharesResponse.ProtoReflect.Descriptor instead.
func (*GetStakerSharesResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *GetStakerSharesResponse) GetShares() []*StakerShare {
	if x != nil {
		return x.Shares
	}
	return nil
}

type GetEigenStateChangesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHeight   uint64                 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEigenStateChangesRequest) Reset() {
	*x = GetEigenStateChangesRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEigenStateChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEigenStateChangesRequest) ProtoMessage() {}

func (x *GetEigenStateChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEigenStateChangesRequest.ProtoReflect.Descriptor instead.
func (*GetEigenStateChangesRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *GetEigenStateChangesRequest) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetEigenStateChangesResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Changes       []*eigenState.EigenStateChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEigenStateChangesResponse) Reset() {
	*x = GetEigenStateChangesResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEigenStateChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEigenStateChangesResponse) ProtoMessage() {}

func (x *GetEigenStateChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEigenStateChangesResponse.ProtoReflect.Descriptor instead.
func (*GetEigenStateChangesResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *GetEigenStateChangesResponse) GetChanges() []*eigenState.EigenStateChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

type ListStrategiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStrategiesRequest) Reset() {
	*x = ListStrategiesRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStrategiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategiesRequest) ProtoMessage() {}

func (x *ListStrategiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategiesRequest.ProtoReflect.Descriptor instead.
func (*ListStrategiesRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{12}
}

type ListStrategiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Strategies    []*Strategy            `protobuf:"bytes,1,rep,name=strategies,proto3" json:"strategies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStrategiesResponse) Reset() {
	*x = ListStrategiesResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStrategiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategiesResponse) ProtoMessage() {}

func (x *ListStrategiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategiesResponse.ProtoReflect.Descriptor instead.
func (*ListStrategiesResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *ListStrategiesResponse) GetStrategies() []*Strategy {
	if x != nil {
		return x.Strategies
	}
	return nil
}

type ListStakerStrategiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StakerAddress string                 `protobuf:"bytes,1,opt,name=stakerAddress,proto3" json:"stakerAddress,omitempty"`
	BlockHeight   *uint64                `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStakerStrategiesRequest) Reset() {
	*x = ListStakerStrategiesRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStakerStrategiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStakerStrategiesRequest) ProtoMessage() {}

func (x *ListStakerStrategiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStakerStrategiesRequest.ProtoReflect.Descriptor instead.
func (*ListStakerStrategiesRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *ListStakerStrategiesRequest) GetStakerAddress() string {
	if x != nil {
		return x.StakerAddress
	}
	return ""
}

func (x *ListStakerStrategiesRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type ListStakerStrategiesResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	StakerStrategies []*StakerStrategy      `protobuf:"bytes,1,rep,name=stakerStrategies,proto3" json:"stakerStrategies,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListStakerStrategiesResponse) Reset() {
	*x = ListStakerStrategiesResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStakerStrategiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStakerStrategiesResponse) ProtoMessage() {}

func (x *ListStakerStrategiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStakerStrategiesResponse.ProtoReflect.Descriptor instead.
func (*ListStakerStrategiesResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{15}
}

func (x *ListStakerStrategiesResponse) GetStakerStrategies() []*StakerStrategy {
	if x != nil {
		return x.StakerStrategies
	}
	return nil
}

type GetStrategyForStakerRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StakerAddress   string                 `protobuf:"bytes,1,opt,name=stakerAddress,proto3" json:"stakerAddress,omitempty"`
	StrategyAddress string                 `protobuf:"bytes,2,opt,name=strategyAddress,proto3" json:"strategyAddress,omitempty"`
	BlockHeight     *uint64                `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetStrategyForStakerRequest) Reset() {
	*x = GetStrategyForStakerRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStrategyForStakerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStrategyForStakerRequest) ProtoMessage() {}

func (x *GetStrategyForStakerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStrategyForStakerRequest.ProtoReflect.Descriptor instead.
func (*GetStrategyForStakerRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{16}
}

func (x *GetStrategyForStakerRequest) GetStakerAddress() string {
	if x != nil {
		return x.StakerAddress
	}
	return ""
}

func (x *GetStrategyForStakerRequest) GetStrategyAddress() string {
	if x != nil {
		return x.StrategyAddress
	}
	return ""
}

func (x *GetStrategyForStakerRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type GetStrategyForStakerResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StakerStrategy *StakerStrategy        `protobuf:"bytes,1,opt,name=stakerStrategy,proto3" json:"stakerStrategy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetStrategyForStakerResponse) Reset() {
	*x = GetStrategyForStakerResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStrategyForStakerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStrategyForStakerResponse) ProtoMessage() {}

func (x *GetStrategyForStakerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStrategyForStakerResponse.ProtoReflect.Descriptor instead.
func (*GetStrategyForStakerResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{17}
}

func (x *GetStrategyForStakerResponse) GetStakerStrategy() *StakerStrategy {
	if x != nil {
		return x.StakerStrategy
	}
	return nil
}

type ListStakerQueuedWithdrawalsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StakerAddress string                 `protobuf:"bytes,1,opt,name=stakerAddress,proto3" json:"stakerAddress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStakerQueuedWithdrawalsRequest) Reset() {
	*x = ListStakerQueuedWithdrawalsRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStakerQueuedWithdrawalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStakerQueuedWithdrawalsRequest) ProtoMessage() {}

func (x *ListStakerQueuedWithdrawalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStakerQueuedWithdrawalsRequest.ProtoReflect.Descriptor instead.
func (*ListStakerQueuedWithdrawalsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{18}
}

func (x *ListStakerQueuedWithdrawalsRequest) GetStakerAddress() string {
	if x != nil {
		return x.StakerAddress
	}
	return ""
}

type ListStakerQueuedWithdrawalsResponse struct {
	state             protoimpl.MessageState      `protogen:"open.v1"`
	QueuedWithdrawals []*QueuedStrategyWithdrawal `protobuf:"bytes,1,rep,name=queuedWithdrawals,proto3" json:"queuedWithdrawals,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListStakerQueuedWithdrawalsResponse) Reset() {
	*x = ListStakerQueuedWithdrawalsResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStakerQueuedWithdrawalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStakerQueuedWithdrawalsResponse) ProtoMessage() {}

func (x *ListStakerQueuedWithdrawalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStakerQueuedWithdrawalsResponse.ProtoReflect.Descriptor instead.
func (*ListStakerQueuedWithdrawalsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{19}
}

func (x *ListStakerQueuedWithdrawalsResponse) GetQueuedWithdrawals() []*QueuedStrategyWithdrawal {
	if x != nil {
		return x.QueuedWithdrawals
	}
	return nil
}

type ListStrategyQueuedWithdrawalsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StrategyAddress string                 `protobuf:"bytes,1,opt,name=strategyAddress,proto3" json:"strategyAddress,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListStrategyQueuedWithdrawalsRequest) Reset() {
	*x = ListStrategyQueuedWithdrawalsRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStrategyQueuedWithdrawalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategyQueuedWithdrawalsRequest) ProtoMessage() {}

func (x *ListStrategyQueuedWithdrawalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategyQueuedWithdrawalsRequest.ProtoReflect.Descriptor instead.
func (*ListStrategyQueuedWithdrawalsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{20}
}

func (x *ListStrategyQueuedWithdrawalsRequest) GetStrategyAddress() string {
	if x != nil {
		return x.StrategyAddress
	}
	return ""
}

type ListStrategyQueuedWithdrawalsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Withdrawals   []*StakerWithdrawal    `protobuf:"bytes,1,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStrategyQueuedWithdrawalsResponse) Reset() {
	*x = ListStrategyQueuedWithdrawalsResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStrategyQueuedWithdrawalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStrategyQueuedWithdrawalsResponse) ProtoMessage() {}

func (x *ListStrategyQueuedWithdrawalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStrategyQueuedWithdrawalsResponse.ProtoReflect.Descriptor instead.
func (*ListStrategyQueuedWithdrawalsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{21}
}

func (x *ListStrategyQueuedWithdrawalsResponse) GetWithdrawals() []*StakerWithdrawal {
	if x != nil {
		return x.Withdrawals
	}
	return nil
}

type ListOperatorQueuedWithdrawalsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OperatorAddress string                 `protobuf:"bytes,1,opt,name=operatorAddress,proto3" json:"operatorAddress,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListOperatorQueuedWithdrawalsRequest) Reset() {
	*x = ListOperatorQueuedWithdrawalsRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOperatorQueuedWithdrawalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperatorQueuedWithdrawalsRequest) ProtoMessage() {}

func (x *ListOperatorQueuedWithdrawalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperatorQueuedWithdrawalsRequest.ProtoReflect.Descriptor instead.
func (*ListOperatorQueuedWithdrawalsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{22}
}

func (x *ListOperatorQueuedWithdrawalsRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

type ListOperatorQueuedWithdrawalsResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Strategies    []*QueueStakerStrategyWithdrawal `protobuf:"bytes,1,rep,name=strategies,proto3" json:"strategies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOperatorQueuedWithdrawalsResponse) Reset() {
	*x = ListOperatorQueuedWithdrawalsResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOperatorQueuedWithdrawalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperatorQueuedWithdrawalsResponse) ProtoMessage() {}

func (x *ListOperatorQueuedWithdrawalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperatorQueuedWithdrawalsResponse.ProtoReflect.Descriptor instead.
func (*ListOperatorQueuedWithdrawalsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{23}
}

func (x *ListOperatorQueuedWithdrawalsResponse) GetStrategies() []*QueueStakerStrategyWithdrawal {
	if x != nil {
		return x.Strategies
	}
	return nil
}

type ListOperatorStrategyQueuedWithdrawalsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OperatorAddress string                 `protobuf:"bytes,1,opt,name=operatorAddress,proto3" json:"operatorAddress,omitempty"`
	StrategyAddress string                 `protobuf:"bytes,2,opt,name=strategyAddress,proto3" json:"strategyAddress,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListOperatorStrategyQueuedWithdrawalsRequest) Reset() {
	*x = ListOperatorStrategyQueuedWithdrawalsRequest{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOperatorStrategyQueuedWithdrawalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperatorStrategyQueuedWithdrawalsRequest) ProtoMessage() {}

func (x *ListOperatorStrategyQueuedWithdrawalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperatorStrategyQueuedWithdrawalsRequest.ProtoReflect.Descriptor instead.
func (*ListOperatorStrategyQueuedWithdrawalsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{24}
}

func (x *ListOperatorStrategyQueuedWithdrawalsRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *ListOperatorStrategyQueuedWithdrawalsRequest) GetStrategyAddress() string {
	if x != nil {
		return x.StrategyAddress
	}
	return ""
}

type ListOperatorStrategyQueuedWithdrawalsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Withdrawals   []*StakerWithdrawal    `protobuf:"bytes,1,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOperatorStrategyQueuedWithdrawalsResponse) Reset() {
	*x = ListOperatorStrategyQueuedWithdrawalsResponse{}
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOperatorStrategyQueuedWithdrawalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperatorStrategyQueuedWithdrawalsResponse) ProtoMessage() {}

func (x *ListOperatorStrategyQueuedWithdrawalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperatorStrategyQueuedWithdrawalsResponse.ProtoReflect.Descriptor instead.
func (*ListOperatorStrategyQueuedWithdrawalsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP(), []int{25}
}

func (x *ListOperatorStrategyQueuedWithdrawalsResponse) GetWithdrawals() []*StakerWithdrawal {
	if x != nil {
		return x.Withdrawals
	}
	return nil
}

var File_eigenlayer_sidecar_v1_protocol_protocol_proto protoreflect.FileDescriptor

var file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDesc = string([]byte{
	0x0a, 0x2d, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a,
	0x31, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2b, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x76, 0x73, 0x46, 0x6f, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x4a, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x41, 0x76, 0x73, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x73,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x76, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x8e,
	0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x5a, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x2b,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6b, 0x0a, 0x2c, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x73, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x46,
	0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xad, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x22, 0x5e,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22, 0x40,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x6c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x17,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x1b, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x7a, 0x0a, 0x1c, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x10, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x69, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x76,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x46, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x4a, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52,
	0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x73, 0x22, 0x50, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x7b, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x73, 0x22, 0x50, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a,
	0x2c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x83, 0x01, 0x0a, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x42, 0x9d, 0x02, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x0d,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x72,
	0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2d, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0xa2, 0x02, 0x04,
	0x45, 0x53, 0x56, 0x50, 0xaa, 0x02, 0x1e, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x56, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0xca, 0x02, 0x1e, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0xe2, 0x02, 0x2a, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x21, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x3a, 0x3a, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescOnce sync.Once
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescData []byte
)

func file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescGZIP() []byte {
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescOnce.Do(func() {
		file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDesc), len(file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDesc)))
	})
	return file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDescData
}

var file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_eigenlayer_sidecar_v1_protocol_protocol_proto_goTypes = []any{
	(*GetRegisteredAvsForOperatorRequest)(nil),            // 0: eigenlayer.sidecar.v1.protocol.GetRegisteredAvsForOperatorRequest
	(*GetRegisteredAvsForOperatorResponse)(nil),           // 1: eigenlayer.sidecar.v1.protocol.GetRegisteredAvsForOperatorResponse
	(*GetDelegatedStrategiesForOperatorRequest)(nil),      // 2: eigenlayer.sidecar.v1.protocol.GetDelegatedStrategiesForOperatorRequest
	(*GetDelegatedStrategiesForOperatorResponse)(nil),     // 3: eigenlayer.sidecar.v1.protocol.GetDelegatedStrategiesForOperatorResponse
	(*GetOperatorDelegatedStakeForStrategyRequest)(nil),   // 4: eigenlayer.sidecar.v1.protocol.GetOperatorDelegatedStakeForStrategyRequest
	(*GetOperatorDelegatedStakeForStrategyResponse)(nil),  // 5: eigenlayer.sidecar.v1.protocol.GetOperatorDelegatedStakeForStrategyResponse
	(*GetDelegatedStakersForOperatorRequest)(nil),         // 6: eigenlayer.sidecar.v1.protocol.GetDelegatedStakersForOperatorRequest
	(*GetDelegatedStakersForOperatorResponse)(nil),        // 7: eigenlayer.sidecar.v1.protocol.GetDelegatedStakersForOperatorResponse
	(*GetStakerSharesRequest)(nil),                        // 8: eigenlayer.sidecar.v1.protocol.GetStakerSharesRequest
	(*GetStakerSharesResponse)(nil),                       // 9: eigenlayer.sidecar.v1.protocol.GetStakerSharesResponse
	(*GetEigenStateChangesRequest)(nil),                   // 10: eigenlayer.sidecar.v1.protocol.GetEigenStateChangesRequest
	(*GetEigenStateChangesResponse)(nil),                  // 11: eigenlayer.sidecar.v1.protocol.GetEigenStateChangesResponse
	(*ListStrategiesRequest)(nil),                         // 12: eigenlayer.sidecar.v1.protocol.ListStrategiesRequest
	(*ListStrategiesResponse)(nil),                        // 13: eigenlayer.sidecar.v1.protocol.ListStrategiesResponse
	(*ListStakerStrategiesRequest)(nil),                   // 14: eigenlayer.sidecar.v1.protocol.ListStakerStrategiesRequest
	(*ListStakerStrategiesResponse)(nil),                  // 15: eigenlayer.sidecar.v1.protocol.ListStakerStrategiesResponse
	(*GetStrategyForStakerRequest)(nil),                   // 16: eigenlayer.sidecar.v1.protocol.GetStrategyForStakerRequest
	(*GetStrategyForStakerResponse)(nil),                  // 17: eigenlayer.sidecar.v1.protocol.GetStrategyForStakerResponse
	(*ListStakerQueuedWithdrawalsRequest)(nil),            // 18: eigenlayer.sidecar.v1.protocol.ListStakerQueuedWithdrawalsRequest
	(*ListStakerQueuedWithdrawalsResponse)(nil),           // 19: eigenlayer.sidecar.v1.protocol.ListStakerQueuedWithdrawalsResponse
	(*ListStrategyQueuedWithdrawalsRequest)(nil),          // 20: eigenlayer.sidecar.v1.protocol.ListStrategyQueuedWithdrawalsRequest
	(*ListStrategyQueuedWithdrawalsResponse)(nil),         // 21: eigenlayer.sidecar.v1.protocol.ListStrategyQueuedWithdrawalsResponse
	(*ListOperatorQueuedWithdrawalsRequest)(nil),          // 22: eigenlayer.sidecar.v1.protocol.ListOperatorQueuedWithdrawalsRequest
	(*ListOperatorQueuedWithdrawalsResponse)(nil),         // 23: eigenlayer.sidecar.v1.protocol.ListOperatorQueuedWithdrawalsResponse
	(*ListOperatorStrategyQueuedWithdrawalsRequest)(nil),  // 24: eigenlayer.sidecar.v1.protocol.ListOperatorStrategyQueuedWithdrawalsRequest
	(*ListOperatorStrategyQueuedWithdrawalsResponse)(nil), // 25: eigenlayer.sidecar.v1.protocol.ListOperatorStrategyQueuedWithdrawalsResponse
	(*common.Pagination)(nil),                             // 26: eigenlayer.sidecar.v1.common.Pagination
	(*StakerShare)(nil),                                   // 27: eigenlayer.sidecar.v1.protocol.StakerShare
	(*eigenState.EigenStateChange)(nil),                   // 28: eigenlayer.sidecar.v1.eigenState.EigenStateChange
	(*Strategy)(nil),                                      // 29: eigenlayer.sidecar.v1.protocol.Strategy
	(*StakerStrategy)(nil),                                // 30: eigenlayer.sidecar.v1.protocol.StakerStrategy
	(*QueuedStrategyWithdrawal)(nil),                      // 31: eigenlayer.sidecar.v1.protocol.QueuedStrategyWithdrawal
	(*StakerWithdrawal)(nil),                              // 32: eigenlayer.sidecar.v1.protocol.StakerWithdrawal
	(*QueueStakerStrategyWithdrawal)(nil),                 // 33: eigenlayer.sidecar.v1.protocol.QueueStakerStrategyWithdrawal
}
var file_eigenlayer_sidecar_v1_protocol_protocol_proto_depIdxs = []int32{
	26, // 0: eigenlayer.sidecar.v1.protocol.GetDelegatedStakersForOperatorRequest.pagination:type_name -> eigenlayer.sidecar.v1.common.Pagination
	26, // 1: eigenlayer.sidecar.v1.protocol.GetDelegatedStakersForOperatorResponse.next_page:type_name -> eigenlayer.sidecar.v1.common.Pagination
	27, // 2: eigenlayer.sidecar.v1.protocol.GetStakerSharesResponse.shares:type_name -> eigenlayer.sidecar.v1.protocol.StakerShare
	28, // 3: eigenlayer.sidecar.v1.protocol.GetEigenStateChangesResponse.changes:type_name -> eigenlayer.sidecar.v1.eigenState.EigenStateChange
	29, // 4: eigenlayer.sidecar.v1.protocol.ListStrategiesResponse.strategies:type_name -> eigenlayer.sidecar.v1.protocol.Strategy
	30, // 5: eigenlayer.sidecar.v1.protocol.ListStakerStrategiesResponse.stakerStrategies:type_name -> eigenlayer.sidecar.v1.protocol.StakerStrategy
	30, // 6: eigenlayer.sidecar.v1.protocol.GetStrategyForStakerResponse.stakerStrategy:type_name -> eigenlayer.sidecar.v1.protocol.StakerStrategy
	31, // 7: eigenlayer.sidecar.v1.protocol.ListStakerQueuedWithdrawalsResponse.queuedWithdrawals:type_name -> eigenlayer.sidecar.v1.protocol.QueuedStrategyWithdrawal
	32, // 8: eigenlayer.sidecar.v1.protocol.ListStrategyQueuedWithdrawalsResponse.withdrawals:type_name -> eigenlayer.sidecar.v1.protocol.StakerWithdrawal
	33, // 9: eigenlayer.sidecar.v1.protocol.ListOperatorQueuedWithdrawalsResponse.strategies:type_name -> eigenlayer.sidecar.v1.protocol.QueueStakerStrategyWithdrawal
	32, // 10: eigenlayer.sidecar.v1.protocol.ListOperatorStrategyQueuedWithdrawalsResponse.withdrawals:type_name -> eigenlayer.sidecar.v1.protocol.StakerWithdrawal
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_eigenlayer_sidecar_v1_protocol_protocol_proto_init() }
func file_eigenlayer_sidecar_v1_protocol_protocol_proto_init() {
	if File_eigenlayer_sidecar_v1_protocol_protocol_proto != nil {
		return
	}
	file_eigenlayer_sidecar_v1_protocol_common_proto_init()
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[0].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[2].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[4].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[6].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[7].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[8].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[14].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDesc), len(file_eigenlayer_sidecar_v1_protocol_protocol_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eigenlayer_sidecar_v1_protocol_protocol_proto_goTypes,
		DependencyIndexes: file_eigenlayer_sidecar_v1_protocol_protocol_proto_depIdxs,
		MessageInfos:      file_eigenlayer_sidecar_v1_protocol_protocol_proto_msgTypes,
	}.Build()
	File_eigenlayer_sidecar_v1_protocol_protocol_proto = out.File
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_goTypes = nil
	file_eigenlayer_sidecar_v1_protocol_protocol_proto_depIdxs = nil
}
