// Code generated by protoc-gen-grpc-gateway-client. DO NOT EDIT.
// source: eigenlayer/sidecar/v1/health/health.proto

package health

import (
	context "context"
	fmt "fmt"
	gateway "github.com/akuity/grpc-gateway-client/pkg/grpc/gateway"
	url "net/url"
)

// HealthGatewayClient is the interface for Health service client.
type HealthGatewayClient interface {
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	ReadyCheck(context.Context, *ReadyRequest) (*ReadyResponse, error)
}

func NewHealthGatewayClient(c gateway.Client) HealthGatewayClient {
	return &healthGatewayClient{
		gwc: c,
	}
}

type healthGatewayClient struct {
	gwc gateway.Client
}

func (c *healthGatewayClient) HealthCheck(ctx context.Context, req *HealthCheckRequest) (*HealthCheckResponse, error) {
	gwReq := c.gwc.NewRequest("GET", "/v1/health")
	q := url.Values{}
	q.Add("service", fmt.Sprintf("%v", req.Service))
	gwReq.SetQueryParamsFromValues(q)
	return gateway.DoRequest[HealthCheckResponse](ctx, gwReq)
}

func (c *healthGatewayClient) ReadyCheck(ctx context.Context, req *ReadyRequest) (*ReadyResponse, error) {
	gwReq := c.gwc.NewRequest("GET", "/v1/ready")
	return gateway.DoRequest[ReadyResponse](ctx, gwReq)
}
