// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: eigenlayer/sidecar/v1/eigenState/eigenState.proto

package eigenState

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RewardSubmission_RewardType int32

const (
	RewardSubmission_AVS         RewardSubmission_RewardType = 0
	RewardSubmission_ALL_STAKERS RewardSubmission_RewardType = 1
	RewardSubmission_ALL_EARNERS RewardSubmission_RewardType = 2
)

// Enum value maps for RewardSubmission_RewardType.
var (
	RewardSubmission_RewardType_name = map[int32]string{
		0: "AVS",
		1: "ALL_STAKERS",
		2: "ALL_EARNERS",
	}
	RewardSubmission_RewardType_value = map[string]int32{
		"AVS":         0,
		"ALL_STAKERS": 1,
		"ALL_EARNERS": 2,
	}
)

func (x RewardSubmission_RewardType) Enum() *RewardSubmission_RewardType {
	p := new(RewardSubmission_RewardType)
	*p = x
	return p
}

func (x RewardSubmission_RewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardSubmission_RewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_enumTypes[0].Descriptor()
}

func (RewardSubmission_RewardType) Type() protoreflect.EnumType {
	return &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_enumTypes[0]
}

func (x RewardSubmission_RewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardSubmission_RewardType.Descriptor instead.
func (RewardSubmission_RewardType) EnumDescriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{4, 0}
}

type StateRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthBlockNumber uint64 `protobuf:"varint,1,opt,name=eth_block_number,json=ethBlockNumber,proto3" json:"eth_block_number,omitempty"`
	EthBlockHash   string `protobuf:"bytes,2,opt,name=eth_block_hash,json=ethBlockHash,proto3" json:"eth_block_hash,omitempty"`
	StateRoot      string `protobuf:"bytes,3,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
}

func (x *StateRoot) Reset() {
	*x = StateRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRoot) ProtoMessage() {}

func (x *StateRoot) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRoot.ProtoReflect.Descriptor instead.
func (*StateRoot) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{0}
}

func (x *StateRoot) GetEthBlockNumber() uint64 {
	if x != nil {
		return x.EthBlockNumber
	}
	return 0
}

func (x *StateRoot) GetEthBlockHash() string {
	if x != nil {
		return x.EthBlockHash
	}
	return ""
}

func (x *StateRoot) GetStateRoot() string {
	if x != nil {
		return x.StateRoot
	}
	return ""
}

type TransactionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogIndex        uint64 `protobuf:"varint,4,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	TransactionHash string `protobuf:"bytes,5,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	BlockHeight     uint64 `protobuf:"varint,6,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *TransactionMetadata) Reset() {
	*x = TransactionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata) ProtoMessage() {}

func (x *TransactionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionMetadata) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *TransactionMetadata) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *TransactionMetadata) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type AvsOperatorStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avs                 string               `protobuf:"bytes,1,opt,name=avs,proto3" json:"avs,omitempty"`
	Operator            string               `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Registered          bool                 `protobuf:"varint,3,opt,name=registered,proto3" json:"registered,omitempty"`
	TransactionMetadata *TransactionMetadata `protobuf:"bytes,4,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
}

func (x *AvsOperatorStateChange) Reset() {
	*x = AvsOperatorStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvsOperatorStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvsOperatorStateChange) ProtoMessage() {}

func (x *AvsOperatorStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvsOperatorStateChange.ProtoReflect.Descriptor instead.
func (*AvsOperatorStateChange) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{2}
}

func (x *AvsOperatorStateChange) GetAvs() string {
	if x != nil {
		return x.Avs
	}
	return ""
}

func (x *AvsOperatorStateChange) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *AvsOperatorStateChange) GetRegistered() bool {
	if x != nil {
		return x.Registered
	}
	return false
}

func (x *AvsOperatorStateChange) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type OperatorShareDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator            string                 `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
	Staker              string                 `protobuf:"bytes,2,opt,name=staker,proto3" json:"staker,omitempty"`
	Strategy            string                 `protobuf:"bytes,3,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Shares              string                 `protobuf:"bytes,4,opt,name=shares,proto3" json:"shares,omitempty"`
	BlockTime           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockDate           string                 `protobuf:"bytes,6,opt,name=block_date,json=blockDate,proto3" json:"block_date,omitempty"`
	TransactionMetadata *TransactionMetadata   `protobuf:"bytes,7,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
}

func (x *OperatorShareDelta) Reset() {
	*x = OperatorShareDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorShareDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorShareDelta) ProtoMessage() {}

func (x *OperatorShareDelta) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorShareDelta.ProtoReflect.Descriptor instead.
func (*OperatorShareDelta) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{3}
}

func (x *OperatorShareDelta) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *OperatorShareDelta) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *OperatorShareDelta) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *OperatorShareDelta) GetShares() string {
	if x != nil {
		return x.Shares
	}
	return ""
}

func (x *OperatorShareDelta) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

func (x *OperatorShareDelta) GetBlockDate() string {
	if x != nil {
		return x.BlockDate
	}
	return ""
}

func (x *OperatorShareDelta) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type RewardSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avs                 string                      `protobuf:"bytes,1,opt,name=avs,proto3" json:"avs,omitempty"`
	RewardHash          string                      `protobuf:"bytes,2,opt,name=reward_hash,json=rewardHash,proto3" json:"reward_hash,omitempty"`
	Token               string                      `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Amount              string                      `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Strategy            string                      `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty"`
	StrategyIndex       uint64                      `protobuf:"varint,6,opt,name=strategy_index,json=strategyIndex,proto3" json:"strategy_index,omitempty"`
	Multiplier          string                      `protobuf:"bytes,7,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	StartTimestamp      *timestamppb.Timestamp      `protobuf:"bytes,8,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	EndTimestamp        *timestamppb.Timestamp      `protobuf:"bytes,9,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	Duration            uint64                      `protobuf:"varint,10,opt,name=duration,proto3" json:"duration,omitempty"`
	RewardType          RewardSubmission_RewardType `protobuf:"varint,11,opt,name=reward_type,json=rewardType,proto3,enum=eigenlayer.sidecar.v1.eigenState.RewardSubmission_RewardType" json:"reward_type,omitempty"`
	TransactionMetadata *TransactionMetadata        `protobuf:"bytes,12,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
}

func (x *RewardSubmission) Reset() {
	*x = RewardSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardSubmission) ProtoMessage() {}

func (x *RewardSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardSubmission.ProtoReflect.Descriptor instead.
func (*RewardSubmission) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{4}
}

func (x *RewardSubmission) GetAvs() string {
	if x != nil {
		return x.Avs
	}
	return ""
}

func (x *RewardSubmission) GetRewardHash() string {
	if x != nil {
		return x.RewardHash
	}
	return ""
}

func (x *RewardSubmission) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RewardSubmission) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *RewardSubmission) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *RewardSubmission) GetStrategyIndex() uint64 {
	if x != nil {
		return x.StrategyIndex
	}
	return 0
}

func (x *RewardSubmission) GetMultiplier() string {
	if x != nil {
		return x.Multiplier
	}
	return ""
}

func (x *RewardSubmission) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *RewardSubmission) GetEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestamp
	}
	return nil
}

func (x *RewardSubmission) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RewardSubmission) GetRewardType() RewardSubmission_RewardType {
	if x != nil {
		return x.RewardType
	}
	return RewardSubmission_AVS
}

func (x *RewardSubmission) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type StakerDelegationChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staker              string               `protobuf:"bytes,1,opt,name=staker,proto3" json:"staker,omitempty"`
	Operator            string               `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Delegated           bool                 `protobuf:"varint,3,opt,name=delegated,proto3" json:"delegated,omitempty"`
	TransactionMetadata *TransactionMetadata `protobuf:"bytes,4,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
}

func (x *StakerDelegationChange) Reset() {
	*x = StakerDelegationChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakerDelegationChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakerDelegationChange) ProtoMessage() {}

func (x *StakerDelegationChange) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakerDelegationChange.ProtoReflect.Descriptor instead.
func (*StakerDelegationChange) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{5}
}

func (x *StakerDelegationChange) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *StakerDelegationChange) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *StakerDelegationChange) GetDelegated() bool {
	if x != nil {
		return x.Delegated
	}
	return false
}

func (x *StakerDelegationChange) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type StakerShareDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staker              string                 `protobuf:"bytes,1,opt,name=staker,proto3" json:"staker,omitempty"`
	Strategy            string                 `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Shares              string                 `protobuf:"bytes,3,opt,name=shares,proto3" json:"shares,omitempty"`
	StrategyIndex       uint64                 `protobuf:"varint,4,opt,name=strategy_index,json=strategyIndex,proto3" json:"strategy_index,omitempty"`
	BlockTime           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockDate           string                 `protobuf:"bytes,6,opt,name=block_date,json=blockDate,proto3" json:"block_date,omitempty"`
	TransactionMetadata *TransactionMetadata   `protobuf:"bytes,7,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
}

func (x *StakerShareDelta) Reset() {
	*x = StakerShareDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakerShareDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakerShareDelta) ProtoMessage() {}

func (x *StakerShareDelta) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakerShareDelta.ProtoReflect.Descriptor instead.
func (*StakerShareDelta) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{6}
}

func (x *StakerShareDelta) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *StakerShareDelta) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *StakerShareDelta) GetShares() string {
	if x != nil {
		return x.Shares
	}
	return ""
}

func (x *StakerShareDelta) GetStrategyIndex() uint64 {
	if x != nil {
		return x.StrategyIndex
	}
	return 0
}

func (x *StakerShareDelta) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

func (x *StakerShareDelta) GetBlockDate() string {
	if x != nil {
		return x.BlockDate
	}
	return ""
}

func (x *StakerShareDelta) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type SubmittedDistributionRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root                      string                 `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	RootIndex                 uint64                 `protobuf:"varint,2,opt,name=root_index,json=rootIndex,proto3" json:"root_index,omitempty"`
	RewardsCalculationEnd     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=rewards_calculation_end,json=rewardsCalculationEnd,proto3" json:"rewards_calculation_end,omitempty"`
	RewardsCalculationEndUnit string                 `protobuf:"bytes,4,opt,name=rewards_calculation_end_unit,json=rewardsCalculationEndUnit,proto3" json:"rewards_calculation_end_unit,omitempty"`
	ActivatedAt               *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=activated_at,json=activatedAt,proto3" json:"activated_at,omitempty"`
	ActivatedAtUnit           string                 `protobuf:"bytes,6,opt,name=activated_at_unit,json=activatedAtUnit,proto3" json:"activated_at_unit,omitempty"`
	CreatedAtBlockNumber      uint64                 `protobuf:"varint,7,opt,name=created_at_block_number,json=createdAtBlockNumber,proto3" json:"created_at_block_number,omitempty"`
	TransactionMetadata       *TransactionMetadata   `protobuf:"bytes,8,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
}

func (x *SubmittedDistributionRoot) Reset() {
	*x = SubmittedDistributionRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmittedDistributionRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmittedDistributionRoot) ProtoMessage() {}

func (x *SubmittedDistributionRoot) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmittedDistributionRoot.ProtoReflect.Descriptor instead.
func (*SubmittedDistributionRoot) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{7}
}

func (x *SubmittedDistributionRoot) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *SubmittedDistributionRoot) GetRootIndex() uint64 {
	if x != nil {
		return x.RootIndex
	}
	return 0
}

func (x *SubmittedDistributionRoot) GetRewardsCalculationEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.RewardsCalculationEnd
	}
	return nil
}

func (x *SubmittedDistributionRoot) GetRewardsCalculationEndUnit() string {
	if x != nil {
		return x.RewardsCalculationEndUnit
	}
	return ""
}

func (x *SubmittedDistributionRoot) GetActivatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivatedAt
	}
	return nil
}

func (x *SubmittedDistributionRoot) GetActivatedAtUnit() string {
	if x != nil {
		return x.ActivatedAtUnit
	}
	return ""
}

func (x *SubmittedDistributionRoot) GetCreatedAtBlockNumber() uint64 {
	if x != nil {
		return x.CreatedAtBlockNumber
	}
	return 0
}

func (x *SubmittedDistributionRoot) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type DisabledDistributionRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootIndex           uint64               `protobuf:"varint,1,opt,name=root_index,json=rootIndex,proto3" json:"root_index,omitempty"`
	TransactionMetadata *TransactionMetadata `protobuf:"bytes,2,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
}

func (x *DisabledDistributionRoot) Reset() {
	*x = DisabledDistributionRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisabledDistributionRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisabledDistributionRoot) ProtoMessage() {}

func (x *DisabledDistributionRoot) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisabledDistributionRoot.ProtoReflect.Descriptor instead.
func (*DisabledDistributionRoot) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{8}
}

func (x *DisabledDistributionRoot) GetRootIndex() uint64 {
	if x != nil {
		return x.RootIndex
	}
	return 0
}

func (x *DisabledDistributionRoot) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type EigenStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Change:
	//
	//	*EigenStateChange_AvsOperatorStateChange
	//	*EigenStateChange_OperatorShareDelta
	//	*EigenStateChange_RewardSubmission
	//	*EigenStateChange_StakerDelegationChange
	//	*EigenStateChange_StakerShareDelta
	//	*EigenStateChange_SubmittedDistributionRoot
	//	*EigenStateChange_DisabledDistributionRoot
	Change isEigenStateChange_Change `protobuf_oneof:"change"`
}

func (x *EigenStateChange) Reset() {
	*x = EigenStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EigenStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EigenStateChange) ProtoMessage() {}

func (x *EigenStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EigenStateChange.ProtoReflect.Descriptor instead.
func (*EigenStateChange) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP(), []int{9}
}

func (m *EigenStateChange) GetChange() isEigenStateChange_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *EigenStateChange) GetAvsOperatorStateChange() *AvsOperatorStateChange {
	if x, ok := x.GetChange().(*EigenStateChange_AvsOperatorStateChange); ok {
		return x.AvsOperatorStateChange
	}
	return nil
}

func (x *EigenStateChange) GetOperatorShareDelta() *OperatorShareDelta {
	if x, ok := x.GetChange().(*EigenStateChange_OperatorShareDelta); ok {
		return x.OperatorShareDelta
	}
	return nil
}

func (x *EigenStateChange) GetRewardSubmission() *RewardSubmission {
	if x, ok := x.GetChange().(*EigenStateChange_RewardSubmission); ok {
		return x.RewardSubmission
	}
	return nil
}

func (x *EigenStateChange) GetStakerDelegationChange() *StakerDelegationChange {
	if x, ok := x.GetChange().(*EigenStateChange_StakerDelegationChange); ok {
		return x.StakerDelegationChange
	}
	return nil
}

func (x *EigenStateChange) GetStakerShareDelta() *StakerShareDelta {
	if x, ok := x.GetChange().(*EigenStateChange_StakerShareDelta); ok {
		return x.StakerShareDelta
	}
	return nil
}

func (x *EigenStateChange) GetSubmittedDistributionRoot() *SubmittedDistributionRoot {
	if x, ok := x.GetChange().(*EigenStateChange_SubmittedDistributionRoot); ok {
		return x.SubmittedDistributionRoot
	}
	return nil
}

func (x *EigenStateChange) GetDisabledDistributionRoot() *DisabledDistributionRoot {
	if x, ok := x.GetChange().(*EigenStateChange_DisabledDistributionRoot); ok {
		return x.DisabledDistributionRoot
	}
	return nil
}

type isEigenStateChange_Change interface {
	isEigenStateChange_Change()
}

type EigenStateChange_AvsOperatorStateChange struct {
	AvsOperatorStateChange *AvsOperatorStateChange `protobuf:"bytes,1,opt,name=avs_operator_state_change,json=avsOperatorStateChange,proto3,oneof"`
}

type EigenStateChange_OperatorShareDelta struct {
	OperatorShareDelta *OperatorShareDelta `protobuf:"bytes,2,opt,name=operator_share_delta,json=operatorShareDelta,proto3,oneof"`
}

type EigenStateChange_RewardSubmission struct {
	RewardSubmission *RewardSubmission `protobuf:"bytes,3,opt,name=reward_submission,json=rewardSubmission,proto3,oneof"`
}

type EigenStateChange_StakerDelegationChange struct {
	StakerDelegationChange *StakerDelegationChange `protobuf:"bytes,4,opt,name=staker_delegation_change,json=stakerDelegationChange,proto3,oneof"`
}

type EigenStateChange_StakerShareDelta struct {
	StakerShareDelta *StakerShareDelta `protobuf:"bytes,5,opt,name=staker_share_delta,json=stakerShareDelta,proto3,oneof"`
}

type EigenStateChange_SubmittedDistributionRoot struct {
	SubmittedDistributionRoot *SubmittedDistributionRoot `protobuf:"bytes,6,opt,name=submitted_distribution_root,json=submittedDistributionRoot,proto3,oneof"`
}

type EigenStateChange_DisabledDistributionRoot struct {
	DisabledDistributionRoot *DisabledDistributionRoot `protobuf:"bytes,7,opt,name=disabled_distribution_root,json=disabledDistributionRoot,proto3,oneof"`
}

func (*EigenStateChange_AvsOperatorStateChange) isEigenStateChange_Change() {}

func (*EigenStateChange_OperatorShareDelta) isEigenStateChange_Change() {}

func (*EigenStateChange_RewardSubmission) isEigenStateChange_Change() {}

func (*EigenStateChange_StakerDelegationChange) isEigenStateChange_Change() {}

func (*EigenStateChange_StakerShareDelta) isEigenStateChange_Change() {}

func (*EigenStateChange_SubmittedDistributionRoot) isEigenStateChange_Change() {}

func (*EigenStateChange_DisabledDistributionRoot) isEigenStateChange_Change() {}

var File_eigenlayer_sidecar_v1_eigenState_eigenState_proto protoreflect.FileDescriptor

var file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDesc = []byte{
	0x0a, 0x31, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x20, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x74, 0x68,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x65,
	0x74, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x22, 0x80, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x16, 0x41, 0x76, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x76, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x76, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x14,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x69, 0x67,
	0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc0, 0x02, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x68, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfb, 0x04, 0x0a, 0x10, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x76, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x76, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37,
	0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x56, 0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x4b, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x41,
	0x52, 0x4e, 0x45, 0x52, 0x53, 0x10, 0x02, 0x22, 0xd4, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9,
	0x02, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x68, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xef, 0x03, 0x0a, 0x19, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x52, 0x0a, 0x17, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x12,
	0x3f, 0x0a, 0x1c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x68, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a,
	0x18, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72,
	0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x68, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xb5, 0x06, 0x0a, 0x10, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x75, 0x0a, 0x19, 0x61, 0x76, 0x73, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x65, 0x69, 0x67,
	0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x76,
	0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x16, 0x61, 0x76, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x68,
	0x0a, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x61, 0x0a, 0x11, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x18, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x16, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x62, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x7d, 0x0a, 0x1b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x65, 0x69, 0x67,
	0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x19, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x6f, 0x74, 0x12, 0x7a, 0x0a, 0x1a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x18, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74,
	0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0xab, 0x02, 0x0a, 0x24, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x0f, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x72, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0xa2, 0x02, 0x04, 0x45, 0x53, 0x56, 0x45, 0xaa, 0x02, 0x20,
	0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x56, 0x31, 0x2e, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0xca, 0x02, 0x20, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x53, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0xe2, 0x02, 0x2c, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x45, 0x69, 0x67, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x23, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x3a,
	0x3a, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x45, 0x69,
	0x67, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescOnce sync.Once
	file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescData = file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDesc
)

func file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescGZIP() []byte {
	file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescOnce.Do(func() {
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescData = protoimpl.X.CompressGZIP(file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescData)
	})
	return file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDescData
}

var file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_goTypes = []any{
	(RewardSubmission_RewardType)(0),  // 0: eigenlayer.sidecar.v1.eigenState.RewardSubmission.RewardType
	(*StateRoot)(nil),                 // 1: eigenlayer.sidecar.v1.eigenState.StateRoot
	(*TransactionMetadata)(nil),       // 2: eigenlayer.sidecar.v1.eigenState.TransactionMetadata
	(*AvsOperatorStateChange)(nil),    // 3: eigenlayer.sidecar.v1.eigenState.AvsOperatorStateChange
	(*OperatorShareDelta)(nil),        // 4: eigenlayer.sidecar.v1.eigenState.OperatorShareDelta
	(*RewardSubmission)(nil),          // 5: eigenlayer.sidecar.v1.eigenState.RewardSubmission
	(*StakerDelegationChange)(nil),    // 6: eigenlayer.sidecar.v1.eigenState.StakerDelegationChange
	(*StakerShareDelta)(nil),          // 7: eigenlayer.sidecar.v1.eigenState.StakerShareDelta
	(*SubmittedDistributionRoot)(nil), // 8: eigenlayer.sidecar.v1.eigenState.SubmittedDistributionRoot
	(*DisabledDistributionRoot)(nil),  // 9: eigenlayer.sidecar.v1.eigenState.DisabledDistributionRoot
	(*EigenStateChange)(nil),          // 10: eigenlayer.sidecar.v1.eigenState.EigenStateChange
	(*timestamppb.Timestamp)(nil),     // 11: google.protobuf.Timestamp
}
var file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_depIdxs = []int32{
	2,  // 0: eigenlayer.sidecar.v1.eigenState.AvsOperatorStateChange.transaction_metadata:type_name -> eigenlayer.sidecar.v1.eigenState.TransactionMetadata
	11, // 1: eigenlayer.sidecar.v1.eigenState.OperatorShareDelta.block_time:type_name -> google.protobuf.Timestamp
	2,  // 2: eigenlayer.sidecar.v1.eigenState.OperatorShareDelta.transaction_metadata:type_name -> eigenlayer.sidecar.v1.eigenState.TransactionMetadata
	11, // 3: eigenlayer.sidecar.v1.eigenState.RewardSubmission.start_timestamp:type_name -> google.protobuf.Timestamp
	11, // 4: eigenlayer.sidecar.v1.eigenState.RewardSubmission.end_timestamp:type_name -> google.protobuf.Timestamp
	0,  // 5: eigenlayer.sidecar.v1.eigenState.RewardSubmission.reward_type:type_name -> eigenlayer.sidecar.v1.eigenState.RewardSubmission.RewardType
	2,  // 6: eigenlayer.sidecar.v1.eigenState.RewardSubmission.transaction_metadata:type_name -> eigenlayer.sidecar.v1.eigenState.TransactionMetadata
	2,  // 7: eigenlayer.sidecar.v1.eigenState.StakerDelegationChange.transaction_metadata:type_name -> eigenlayer.sidecar.v1.eigenState.TransactionMetadata
	11, // 8: eigenlayer.sidecar.v1.eigenState.StakerShareDelta.block_time:type_name -> google.protobuf.Timestamp
	2,  // 9: eigenlayer.sidecar.v1.eigenState.StakerShareDelta.transaction_metadata:type_name -> eigenlayer.sidecar.v1.eigenState.TransactionMetadata
	11, // 10: eigenlayer.sidecar.v1.eigenState.SubmittedDistributionRoot.rewards_calculation_end:type_name -> google.protobuf.Timestamp
	11, // 11: eigenlayer.sidecar.v1.eigenState.SubmittedDistributionRoot.activated_at:type_name -> google.protobuf.Timestamp
	2,  // 12: eigenlayer.sidecar.v1.eigenState.SubmittedDistributionRoot.transaction_metadata:type_name -> eigenlayer.sidecar.v1.eigenState.TransactionMetadata
	2,  // 13: eigenlayer.sidecar.v1.eigenState.DisabledDistributionRoot.transaction_metadata:type_name -> eigenlayer.sidecar.v1.eigenState.TransactionMetadata
	3,  // 14: eigenlayer.sidecar.v1.eigenState.EigenStateChange.avs_operator_state_change:type_name -> eigenlayer.sidecar.v1.eigenState.AvsOperatorStateChange
	4,  // 15: eigenlayer.sidecar.v1.eigenState.EigenStateChange.operator_share_delta:type_name -> eigenlayer.sidecar.v1.eigenState.OperatorShareDelta
	5,  // 16: eigenlayer.sidecar.v1.eigenState.EigenStateChange.reward_submission:type_name -> eigenlayer.sidecar.v1.eigenState.RewardSubmission
	6,  // 17: eigenlayer.sidecar.v1.eigenState.EigenStateChange.staker_delegation_change:type_name -> eigenlayer.sidecar.v1.eigenState.StakerDelegationChange
	7,  // 18: eigenlayer.sidecar.v1.eigenState.EigenStateChange.staker_share_delta:type_name -> eigenlayer.sidecar.v1.eigenState.StakerShareDelta
	8,  // 19: eigenlayer.sidecar.v1.eigenState.EigenStateChange.submitted_distribution_root:type_name -> eigenlayer.sidecar.v1.eigenState.SubmittedDistributionRoot
	9,  // 20: eigenlayer.sidecar.v1.eigenState.EigenStateChange.disabled_distribution_root:type_name -> eigenlayer.sidecar.v1.eigenState.DisabledDistributionRoot
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_init() }
func file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_init() {
	if File_eigenlayer_sidecar_v1_eigenState_eigenState_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*StateRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AvsOperatorStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OperatorShareDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RewardSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StakerDelegationChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StakerShareDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SubmittedDistributionRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DisabledDistributionRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*EigenStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes[9].OneofWrappers = []any{
		(*EigenStateChange_AvsOperatorStateChange)(nil),
		(*EigenStateChange_OperatorShareDelta)(nil),
		(*EigenStateChange_RewardSubmission)(nil),
		(*EigenStateChange_StakerDelegationChange)(nil),
		(*EigenStateChange_StakerShareDelta)(nil),
		(*EigenStateChange_SubmittedDistributionRoot)(nil),
		(*EigenStateChange_DisabledDistributionRoot)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_goTypes,
		DependencyIndexes: file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_depIdxs,
		EnumInfos:         file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_enumTypes,
		MessageInfos:      file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_msgTypes,
	}.Build()
	File_eigenlayer_sidecar_v1_eigenState_eigenState_proto = out.File
	file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_rawDesc = nil
	file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_goTypes = nil
	file_eigenlayer_sidecar_v1_eigenState_eigenState_proto_depIdxs = nil
}
