// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: eigenlayer/sidecar/v1/rewards/rewards.proto

package rewards

import (
	common "github.com/Layr-Labs/protocol-apis/gen/protos/eigenlayer/sidecar/v1/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRewardsRootRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHeight   uint64                 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRewardsRootRequest) Reset() {
	*x = GetRewardsRootRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRewardsRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardsRootRequest) ProtoMessage() {}

func (x *GetRewardsRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardsRootRequest.ProtoReflect.Descriptor instead.
func (*GetRewardsRootRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{0}
}

func (x *GetRewardsRootRequest) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetRewardsRootResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RewardsRoot   *DistributionRoot      `protobuf:"bytes,1,opt,name=rewards_root,json=rewardsRoot,proto3" json:"rewards_root,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRewardsRootResponse) Reset() {
	*x = GetRewardsRootResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRewardsRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardsRootResponse) ProtoMessage() {}

func (x *GetRewardsRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardsRootResponse.ProtoReflect.Descriptor instead.
func (*GetRewardsRootResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{1}
}

func (x *GetRewardsRootResponse) GetRewardsRoot() *DistributionRoot {
	if x != nil {
		return x.RewardsRoot
	}
	return nil
}

type GenerateRewardsRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CutoffDate             string                 `protobuf:"bytes,1,opt,name=cutoff_date,json=cutoffDate,proto3" json:"cutoff_date,omitempty"`
	RespondWithRewardsData bool                   `protobuf:"varint,2,opt,name=respond_with_rewards_data,json=respondWithRewardsData,proto3" json:"respond_with_rewards_data,omitempty"`
	WaitForComplete        bool                   `protobuf:"varint,3,opt,name=wait_for_complete,json=waitForComplete,proto3" json:"wait_for_complete,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GenerateRewardsRequest) Reset() {
	*x = GenerateRewardsRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRewardsRequest) ProtoMessage() {}

func (x *GenerateRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRewardsRequest.ProtoReflect.Descriptor instead.
func (*GenerateRewardsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateRewardsRequest) GetCutoffDate() string {
	if x != nil {
		return x.CutoffDate
	}
	return ""
}

func (x *GenerateRewardsRequest) GetRespondWithRewardsData() bool {
	if x != nil {
		return x.RespondWithRewardsData
	}
	return false
}

func (x *GenerateRewardsRequest) GetWaitForComplete() bool {
	if x != nil {
		return x.WaitForComplete
	}
	return false
}

type GenerateRewardsResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	CutoffDate string                 `protobuf:"bytes,1,opt,name=cutoff_date,json=cutoffDate,proto3" json:"cutoff_date,omitempty"`
	// Returned if respondWithRewardsData is true in the request
	Rewards       *Reward `protobuf:"bytes,2,opt,name=rewards,proto3,oneof" json:"rewards,omitempty"`
	Queued        bool    `protobuf:"varint,3,opt,name=queued,proto3" json:"queued,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateRewardsResponse) Reset() {
	*x = GenerateRewardsResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRewardsResponse) ProtoMessage() {}

func (x *GenerateRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRewardsResponse.ProtoReflect.Descriptor instead.
func (*GenerateRewardsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateRewardsResponse) GetCutoffDate() string {
	if x != nil {
		return x.CutoffDate
	}
	return ""
}

func (x *GenerateRewardsResponse) GetRewards() *Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *GenerateRewardsResponse) GetQueued() bool {
	if x != nil {
		return x.Queued
	}
	return false
}

type GenerateStakerOperatorsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CutoffDate      string                 `protobuf:"bytes,1,opt,name=cutoff_date,json=cutoffDate,proto3" json:"cutoff_date,omitempty"`
	WaitForComplete bool                   `protobuf:"varint,2,opt,name=wait_for_complete,json=waitForComplete,proto3" json:"wait_for_complete,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateStakerOperatorsRequest) Reset() {
	*x = GenerateStakerOperatorsRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateStakerOperatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateStakerOperatorsRequest) ProtoMessage() {}

func (x *GenerateStakerOperatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateStakerOperatorsRequest.ProtoReflect.Descriptor instead.
func (*GenerateStakerOperatorsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateStakerOperatorsRequest) GetCutoffDate() string {
	if x != nil {
		return x.CutoffDate
	}
	return ""
}

func (x *GenerateStakerOperatorsRequest) GetWaitForComplete() bool {
	if x != nil {
		return x.WaitForComplete
	}
	return false
}

type GenerateStakerOperatorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queued        bool                   `protobuf:"varint,1,opt,name=queued,proto3" json:"queued,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateStakerOperatorsResponse) Reset() {
	*x = GenerateStakerOperatorsResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateStakerOperatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateStakerOperatorsResponse) ProtoMessage() {}

func (x *GenerateStakerOperatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateStakerOperatorsResponse.ProtoReflect.Descriptor instead.
func (*GenerateStakerOperatorsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateStakerOperatorsResponse) GetQueued() bool {
	if x != nil {
		return x.Queued
	}
	return false
}

type BackfillStakerOperatorsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	WaitForComplete bool                   `protobuf:"varint,1,opt,name=wait_for_complete,json=waitForComplete,proto3" json:"wait_for_complete,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BackfillStakerOperatorsRequest) Reset() {
	*x = BackfillStakerOperatorsRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackfillStakerOperatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackfillStakerOperatorsRequest) ProtoMessage() {}

func (x *BackfillStakerOperatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackfillStakerOperatorsRequest.ProtoReflect.Descriptor instead.
func (*BackfillStakerOperatorsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{6}
}

func (x *BackfillStakerOperatorsRequest) GetWaitForComplete() bool {
	if x != nil {
		return x.WaitForComplete
	}
	return false
}

type BackfillStakerOperatorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queued        bool                   `protobuf:"varint,1,opt,name=queued,proto3" json:"queued,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackfillStakerOperatorsResponse) Reset() {
	*x = BackfillStakerOperatorsResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackfillStakerOperatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackfillStakerOperatorsResponse) ProtoMessage() {}

func (x *BackfillStakerOperatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackfillStakerOperatorsResponse.ProtoReflect.Descriptor instead.
func (*BackfillStakerOperatorsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{7}
}

func (x *BackfillStakerOperatorsResponse) GetQueued() bool {
	if x != nil {
		return x.Queued
	}
	return false
}

type GenerateRewardsRootRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The date to calculate rewards up to, exclusive
	CutoffDate    string `protobuf:"bytes,1,opt,name=cutoff_date,json=cutoffDate,proto3" json:"cutoff_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateRewardsRootRequest) Reset() {
	*x = GenerateRewardsRootRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRewardsRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRewardsRootRequest) ProtoMessage() {}

func (x *GenerateRewardsRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRewardsRootRequest.ProtoReflect.Descriptor instead.
func (*GenerateRewardsRootRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{8}
}

func (x *GenerateRewardsRootRequest) GetCutoffDate() string {
	if x != nil {
		return x.CutoffDate
	}
	return ""
}

type GenerateRewardsRootResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RewardsRoot        string                 `protobuf:"bytes,1,opt,name=rewards_root,json=rewardsRoot,proto3" json:"rewards_root,omitempty"`
	RewardsCalcEndDate string                 `protobuf:"bytes,2,opt,name=rewards_calc_end_date,json=rewardsCalcEndDate,proto3" json:"rewards_calc_end_date,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GenerateRewardsRootResponse) Reset() {
	*x = GenerateRewardsRootResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRewardsRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRewardsRootResponse) ProtoMessage() {}

func (x *GenerateRewardsRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRewardsRootResponse.ProtoReflect.Descriptor instead.
func (*GenerateRewardsRootResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateRewardsRootResponse) GetRewardsRoot() string {
	if x != nil {
		return x.RewardsRoot
	}
	return ""
}

func (x *GenerateRewardsRootResponse) GetRewardsCalcEndDate() string {
	if x != nil {
		return x.RewardsCalcEndDate
	}
	return ""
}

type GetRewardsForSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshot      string                 `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Earner        *string                `protobuf:"bytes,2,opt,name=earner,proto3,oneof" json:"earner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRewardsForSnapshotRequest) Reset() {
	*x = GetRewardsForSnapshotRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRewardsForSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardsForSnapshotRequest) ProtoMessage() {}

func (x *GetRewardsForSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardsForSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetRewardsForSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{10}
}

func (x *GetRewardsForSnapshotRequest) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

func (x *GetRewardsForSnapshotRequest) GetEarner() string {
	if x != nil && x.Earner != nil {
		return *x.Earner
	}
	return ""
}

type GetRewardsForSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*Reward              `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRewardsForSnapshotResponse) Reset() {
	*x = GetRewardsForSnapshotResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRewardsForSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardsForSnapshotResponse) ProtoMessage() {}

func (x *GetRewardsForSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardsForSnapshotResponse.ProtoReflect.Descriptor instead.
func (*GetRewardsForSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{11}
}

func (x *GetRewardsForSnapshotResponse) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GetRewardsForDistributionRootRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RootIndex     uint64                 `protobuf:"varint,1,opt,name=root_index,json=rootIndex,proto3" json:"root_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRewardsForDistributionRootRequest) Reset() {
	*x = GetRewardsForDistributionRootRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRewardsForDistributionRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardsForDistributionRootRequest) ProtoMessage() {}

func (x *GetRewardsForDistributionRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardsForDistributionRootRequest.ProtoReflect.Descriptor instead.
func (*GetRewardsForDistributionRootRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{12}
}

func (x *GetRewardsForDistributionRootRequest) GetRootIndex() uint64 {
	if x != nil {
		return x.RootIndex
	}
	return 0
}

type GetRewardsForDistributionRootResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*Reward              `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRewardsForDistributionRootResponse) Reset() {
	*x = GetRewardsForDistributionRootResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRewardsForDistributionRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardsForDistributionRootResponse) ProtoMessage() {}

func (x *GetRewardsForDistributionRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardsForDistributionRootResponse.ProtoReflect.Descriptor instead.
func (*GetRewardsForDistributionRootResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{13}
}

func (x *GetRewardsForDistributionRootResponse) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GetAttributableRewardsForSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshot      string                 `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttributableRewardsForSnapshotRequest) Reset() {
	*x = GetAttributableRewardsForSnapshotRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttributableRewardsForSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttributableRewardsForSnapshotRequest) ProtoMessage() {}

func (x *GetAttributableRewardsForSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttributableRewardsForSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetAttributableRewardsForSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{14}
}

func (x *GetAttributableRewardsForSnapshotRequest) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

type GetAttributableRewardsForSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*AttributableReward  `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttributableRewardsForSnapshotResponse) Reset() {
	*x = GetAttributableRewardsForSnapshotResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttributableRewardsForSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttributableRewardsForSnapshotResponse) ProtoMessage() {}

func (x *GetAttributableRewardsForSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttributableRewardsForSnapshotResponse.ProtoReflect.Descriptor instead.
func (*GetAttributableRewardsForSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{15}
}

func (x *GetAttributableRewardsForSnapshotResponse) GetRewards() []*AttributableReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GetAttributableRewardsForDistributionRootRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DistributionRoot string                 `protobuf:"bytes,1,opt,name=distribution_root,json=distributionRoot,proto3" json:"distribution_root,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetAttributableRewardsForDistributionRootRequest) Reset() {
	*x = GetAttributableRewardsForDistributionRootRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttributableRewardsForDistributionRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttributableRewardsForDistributionRootRequest) ProtoMessage() {}

func (x *GetAttributableRewardsForDistributionRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttributableRewardsForDistributionRootRequest.ProtoReflect.Descriptor instead.
func (*GetAttributableRewardsForDistributionRootRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{16}
}

func (x *GetAttributableRewardsForDistributionRootRequest) GetDistributionRoot() string {
	if x != nil {
		return x.DistributionRoot
	}
	return ""
}

type GetAttributableRewardsForDistributionRootResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*AttributableReward  `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttributableRewardsForDistributionRootResponse) Reset() {
	*x = GetAttributableRewardsForDistributionRootResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttributableRewardsForDistributionRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttributableRewardsForDistributionRootResponse) ProtoMessage() {}

func (x *GetAttributableRewardsForDistributionRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttributableRewardsForDistributionRootResponse.ProtoReflect.Descriptor instead.
func (*GetAttributableRewardsForDistributionRootResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{17}
}

func (x *GetAttributableRewardsForDistributionRootResponse) GetRewards() []*AttributableReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GetRewardsByAvsForDistributionRootRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RootIndex     uint64                 `protobuf:"varint,1,opt,name=root_index,json=rootIndex,proto3" json:"root_index,omitempty"`
	Pagination    *common.Pagination     `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	EarnerAddress *string                `protobuf:"bytes,3,opt,name=earner_address,json=earnerAddress,proto3,oneof" json:"earner_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRewardsByAvsForDistributionRootRequest) Reset() {
	*x = GetRewardsByAvsForDistributionRootRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRewardsByAvsForDistributionRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardsByAvsForDistributionRootRequest) ProtoMessage() {}

func (x *GetRewardsByAvsForDistributionRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardsByAvsForDistributionRootRequest.ProtoReflect.Descriptor instead.
func (*GetRewardsByAvsForDistributionRootRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{18}
}

func (x *GetRewardsByAvsForDistributionRootRequest) GetRootIndex() uint64 {
	if x != nil {
		return x.RootIndex
	}
	return 0
}

func (x *GetRewardsByAvsForDistributionRootRequest) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetRewardsByAvsForDistributionRootRequest) GetEarnerAddress() string {
	if x != nil && x.EarnerAddress != nil {
		return *x.EarnerAddress
	}
	return ""
}

type GetRewardsByAvsForDistributionRootResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*AvsReward           `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	NextPage      *common.Pagination     `protobuf:"bytes,2,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRewardsByAvsForDistributionRootResponse) Reset() {
	*x = GetRewardsByAvsForDistributionRootResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRewardsByAvsForDistributionRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardsByAvsForDistributionRootResponse) ProtoMessage() {}

func (x *GetRewardsByAvsForDistributionRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardsByAvsForDistributionRootResponse.ProtoReflect.Descriptor instead.
func (*GetRewardsByAvsForDistributionRootResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{19}
}

func (x *GetRewardsByAvsForDistributionRootResponse) GetRewards() []*AvsReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *GetRewardsByAvsForDistributionRootResponse) GetNextPage() *common.Pagination {
	if x != nil {
		return x.NextPage
	}
	return nil
}

type GenerateClaimProofRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EarnerAddress string                 `protobuf:"bytes,1,opt,name=earner_address,json=earnerAddress,proto3" json:"earner_address,omitempty"`
	Tokens        []string               `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
	// if root_index is omitted, the current active root will be used
	RootIndex     *wrapperspb.Int64Value `protobuf:"bytes,3,opt,name=root_index,json=rootIndex,proto3,oneof" json:"root_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateClaimProofRequest) Reset() {
	*x = GenerateClaimProofRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateClaimProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateClaimProofRequest) ProtoMessage() {}

func (x *GenerateClaimProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateClaimProofRequest.ProtoReflect.Descriptor instead.
func (*GenerateClaimProofRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{20}
}

func (x *GenerateClaimProofRequest) GetEarnerAddress() string {
	if x != nil {
		return x.EarnerAddress
	}
	return ""
}

func (x *GenerateClaimProofRequest) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *GenerateClaimProofRequest) GetRootIndex() *wrapperspb.Int64Value {
	if x != nil {
		return x.RootIndex
	}
	return nil
}

type GenerateClaimProofResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proof         *Proof                 `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateClaimProofResponse) Reset() {
	*x = GenerateClaimProofResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateClaimProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateClaimProofResponse) ProtoMessage() {}

func (x *GenerateClaimProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateClaimProofResponse.ProtoReflect.Descriptor instead.
func (*GenerateClaimProofResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{21}
}

func (x *GenerateClaimProofResponse) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type GetClaimableRewardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EarnerAddress string                 `protobuf:"bytes,1,opt,name=earner_address,json=earnerAddress,proto3" json:"earner_address,omitempty"`
	BlockHeight   uint64                 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClaimableRewardsRequest) Reset() {
	*x = GetClaimableRewardsRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClaimableRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimableRewardsRequest) ProtoMessage() {}

func (x *GetClaimableRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimableRewardsRequest.ProtoReflect.Descriptor instead.
func (*GetClaimableRewardsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{22}
}

func (x *GetClaimableRewardsRequest) GetEarnerAddress() string {
	if x != nil {
		return x.EarnerAddress
	}
	return ""
}

func (x *GetClaimableRewardsRequest) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetClaimableRewardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*Reward              `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClaimableRewardsResponse) Reset() {
	*x = GetClaimableRewardsResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClaimableRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimableRewardsResponse) ProtoMessage() {}

func (x *GetClaimableRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimableRewardsResponse.ProtoReflect.Descriptor instead.
func (*GetClaimableRewardsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{23}
}

func (x *GetClaimableRewardsResponse) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GetTotalClaimedRewardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EarnerAddress string                 `protobuf:"bytes,1,opt,name=earner_address,json=earnerAddress,proto3" json:"earner_address,omitempty"`
	BlockHeight   *uint64                `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalClaimedRewardsRequest) Reset() {
	*x = GetTotalClaimedRewardsRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalClaimedRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalClaimedRewardsRequest) ProtoMessage() {}

func (x *GetTotalClaimedRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalClaimedRewardsRequest.ProtoReflect.Descriptor instead.
func (*GetTotalClaimedRewardsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{24}
}

func (x *GetTotalClaimedRewardsRequest) GetEarnerAddress() string {
	if x != nil {
		return x.EarnerAddress
	}
	return ""
}

func (x *GetTotalClaimedRewardsRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type GetTotalClaimedRewardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*TotalClaimedReward  `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalClaimedRewardsResponse) Reset() {
	*x = GetTotalClaimedRewardsResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalClaimedRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalClaimedRewardsResponse) ProtoMessage() {}

func (x *GetTotalClaimedRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalClaimedRewardsResponse.ProtoReflect.Descriptor instead.
func (*GetTotalClaimedRewardsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{25}
}

func (x *GetTotalClaimedRewardsResponse) GetRewards() []*TotalClaimedReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GetAvailableRewardsTokensRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EarnerAddress string                 `protobuf:"bytes,1,opt,name=earner_address,json=earnerAddress,proto3" json:"earner_address,omitempty"`
	BlockHeight   *uint64                `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableRewardsTokensRequest) Reset() {
	*x = GetAvailableRewardsTokensRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableRewardsTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableRewardsTokensRequest) ProtoMessage() {}

func (x *GetAvailableRewardsTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableRewardsTokensRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableRewardsTokensRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{26}
}

func (x *GetAvailableRewardsTokensRequest) GetEarnerAddress() string {
	if x != nil {
		return x.EarnerAddress
	}
	return ""
}

func (x *GetAvailableRewardsTokensRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type GetAvailableRewardsTokensResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tokens        []string               `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableRewardsTokensResponse) Reset() {
	*x = GetAvailableRewardsTokensResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableRewardsTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableRewardsTokensResponse) ProtoMessage() {}

func (x *GetAvailableRewardsTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableRewardsTokensResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableRewardsTokensResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{27}
}

func (x *GetAvailableRewardsTokensResponse) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type GetSummarizedRewardsForEarnerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EarnerAddress string                 `protobuf:"bytes,1,opt,name=earner_address,json=earnerAddress,proto3" json:"earner_address,omitempty"`
	BlockHeight   *uint64                `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSummarizedRewardsForEarnerRequest) Reset() {
	*x = GetSummarizedRewardsForEarnerRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummarizedRewardsForEarnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummarizedRewardsForEarnerRequest) ProtoMessage() {}

func (x *GetSummarizedRewardsForEarnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummarizedRewardsForEarnerRequest.ProtoReflect.Descriptor instead.
func (*GetSummarizedRewardsForEarnerRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{28}
}

func (x *GetSummarizedRewardsForEarnerRequest) GetEarnerAddress() string {
	if x != nil {
		return x.EarnerAddress
	}
	return ""
}

func (x *GetSummarizedRewardsForEarnerRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type GetSummarizedRewardsForEarnerResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Rewards       []*SummarizedEarnerReward `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSummarizedRewardsForEarnerResponse) Reset() {
	*x = GetSummarizedRewardsForEarnerResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummarizedRewardsForEarnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummarizedRewardsForEarnerResponse) ProtoMessage() {}

func (x *GetSummarizedRewardsForEarnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummarizedRewardsForEarnerResponse.ProtoReflect.Descriptor instead.
func (*GetSummarizedRewardsForEarnerResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{29}
}

func (x *GetSummarizedRewardsForEarnerResponse) GetRewards() []*SummarizedEarnerReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GetClaimedRewardsByBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHeight   uint64                 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClaimedRewardsByBlockRequest) Reset() {
	*x = GetClaimedRewardsByBlockRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClaimedRewardsByBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimedRewardsByBlockRequest) ProtoMessage() {}

func (x *GetClaimedRewardsByBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimedRewardsByBlockRequest.ProtoReflect.Descriptor instead.
func (*GetClaimedRewardsByBlockRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{30}
}

func (x *GetClaimedRewardsByBlockRequest) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetClaimedRewardsByBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*ClaimedReward       `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClaimedRewardsByBlockResponse) Reset() {
	*x = GetClaimedRewardsByBlockResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClaimedRewardsByBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimedRewardsByBlockResponse) ProtoMessage() {}

func (x *GetClaimedRewardsByBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimedRewardsByBlockResponse.ProtoReflect.Descriptor instead.
func (*GetClaimedRewardsByBlockResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{31}
}

func (x *GetClaimedRewardsByBlockResponse) GetRewards() []*ClaimedReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ListDistributionRootsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHeight   *uint64                `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDistributionRootsRequest) Reset() {
	*x = ListDistributionRootsRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDistributionRootsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDistributionRootsRequest) ProtoMessage() {}

func (x *ListDistributionRootsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDistributionRootsRequest.ProtoReflect.Descriptor instead.
func (*ListDistributionRootsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{32}
}

func (x *ListDistributionRootsRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

type ListDistributionRootsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DistributionRoots []*DistributionRoot    `protobuf:"bytes,1,rep,name=distribution_roots,json=distributionRoots,proto3" json:"distribution_roots,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListDistributionRootsResponse) Reset() {
	*x = ListDistributionRootsResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDistributionRootsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDistributionRootsResponse) ProtoMessage() {}

func (x *ListDistributionRootsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDistributionRootsResponse.ProtoReflect.Descriptor instead.
func (*ListDistributionRootsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{33}
}

func (x *ListDistributionRootsResponse) GetDistributionRoots() []*DistributionRoot {
	if x != nil {
		return x.DistributionRoots
	}
	return nil
}

type ListClaimedRewardsByBlockRangeRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EarnerAddress    string                 `protobuf:"bytes,1,opt,name=earner_address,json=earnerAddress,proto3" json:"earner_address,omitempty"`
	StartBlockHeight uint64                 `protobuf:"varint,2,opt,name=start_block_height,json=startBlockHeight,proto3" json:"start_block_height,omitempty"`
	EndBlockHeight   uint64                 `protobuf:"varint,3,opt,name=end_block_height,json=endBlockHeight,proto3" json:"end_block_height,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListClaimedRewardsByBlockRangeRequest) Reset() {
	*x = ListClaimedRewardsByBlockRangeRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClaimedRewardsByBlockRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClaimedRewardsByBlockRangeRequest) ProtoMessage() {}

func (x *ListClaimedRewardsByBlockRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClaimedRewardsByBlockRangeRequest.ProtoReflect.Descriptor instead.
func (*ListClaimedRewardsByBlockRangeRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{34}
}

func (x *ListClaimedRewardsByBlockRangeRequest) GetEarnerAddress() string {
	if x != nil {
		return x.EarnerAddress
	}
	return ""
}

func (x *ListClaimedRewardsByBlockRangeRequest) GetStartBlockHeight() uint64 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *ListClaimedRewardsByBlockRangeRequest) GetEndBlockHeight() uint64 {
	if x != nil {
		return x.EndBlockHeight
	}
	return 0
}

type ListClaimedRewardsByBlockRangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*ClaimedReward       `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClaimedRewardsByBlockRangeResponse) Reset() {
	*x = ListClaimedRewardsByBlockRangeResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClaimedRewardsByBlockRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClaimedRewardsByBlockRangeResponse) ProtoMessage() {}

func (x *ListClaimedRewardsByBlockRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClaimedRewardsByBlockRangeResponse.ProtoReflect.Descriptor instead.
func (*ListClaimedRewardsByBlockRangeResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{35}
}

func (x *ListClaimedRewardsByBlockRangeResponse) GetRewards() []*ClaimedReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ListEarnerLifetimeRewardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EarnerAddress string                 `protobuf:"bytes,1,opt,name=earnerAddress,proto3" json:"earnerAddress,omitempty"`
	BlockHeight   *uint64                `protobuf:"varint,2,opt,name=blockHeight,proto3,oneof" json:"blockHeight,omitempty"`
	Pagination    *common.Pagination     `protobuf:"bytes,3,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEarnerLifetimeRewardsRequest) Reset() {
	*x = ListEarnerLifetimeRewardsRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEarnerLifetimeRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEarnerLifetimeRewardsRequest) ProtoMessage() {}

func (x *ListEarnerLifetimeRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEarnerLifetimeRewardsRequest.ProtoReflect.Descriptor instead.
func (*ListEarnerLifetimeRewardsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{36}
}

func (x *ListEarnerLifetimeRewardsRequest) GetEarnerAddress() string {
	if x != nil {
		return x.EarnerAddress
	}
	return ""
}

func (x *ListEarnerLifetimeRewardsRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

func (x *ListEarnerLifetimeRewardsRequest) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListEarnerLifetimeRewardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*RewardAmount        `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	NextPage      *common.Pagination     `protobuf:"bytes,2,opt,name=nextPage,proto3,oneof" json:"nextPage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEarnerLifetimeRewardsResponse) Reset() {
	*x = ListEarnerLifetimeRewardsResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEarnerLifetimeRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEarnerLifetimeRewardsResponse) ProtoMessage() {}

func (x *ListEarnerLifetimeRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEarnerLifetimeRewardsResponse.ProtoReflect.Descriptor instead.
func (*ListEarnerLifetimeRewardsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{37}
}

func (x *ListEarnerLifetimeRewardsResponse) GetRewards() []*RewardAmount {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ListEarnerLifetimeRewardsResponse) GetNextPage() *common.Pagination {
	if x != nil {
		return x.NextPage
	}
	return nil
}

type ListEarnerHistoricalRewardsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EarnerAddress    string                 `protobuf:"bytes,1,opt,name=earnerAddress,proto3" json:"earnerAddress,omitempty"`
	StartBlockHeight *uint64                `protobuf:"varint,2,opt,name=startBlockHeight,proto3,oneof" json:"startBlockHeight,omitempty"`
	EndBlockHeight   *uint64                `protobuf:"varint,3,opt,name=endBlockHeight,proto3,oneof" json:"endBlockHeight,omitempty"`
	Tokens           []string               `protobuf:"bytes,4,rep,name=tokens,proto3" json:"tokens,omitempty"`
	Pagination       *common.Pagination     `protobuf:"bytes,5,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListEarnerHistoricalRewardsRequest) Reset() {
	*x = ListEarnerHistoricalRewardsRequest{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEarnerHistoricalRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEarnerHistoricalRewardsRequest) ProtoMessage() {}

func (x *ListEarnerHistoricalRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEarnerHistoricalRewardsRequest.ProtoReflect.Descriptor instead.
func (*ListEarnerHistoricalRewardsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{38}
}

func (x *ListEarnerHistoricalRewardsRequest) GetEarnerAddress() string {
	if x != nil {
		return x.EarnerAddress
	}
	return ""
}

func (x *ListEarnerHistoricalRewardsRequest) GetStartBlockHeight() uint64 {
	if x != nil && x.StartBlockHeight != nil {
		return *x.StartBlockHeight
	}
	return 0
}

func (x *ListEarnerHistoricalRewardsRequest) GetEndBlockHeight() uint64 {
	if x != nil && x.EndBlockHeight != nil {
		return *x.EndBlockHeight
	}
	return 0
}

func (x *ListEarnerHistoricalRewardsRequest) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ListEarnerHistoricalRewardsRequest) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListEarnerHistoricalRewardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*HistoricalReward    `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	NextPage      *common.Pagination     `protobuf:"bytes,2,opt,name=nextPage,proto3,oneof" json:"nextPage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEarnerHistoricalRewardsResponse) Reset() {
	*x = ListEarnerHistoricalRewardsResponse{}
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEarnerHistoricalRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEarnerHistoricalRewardsResponse) ProtoMessage() {}

func (x *ListEarnerHistoricalRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEarnerHistoricalRewardsResponse.ProtoReflect.Descriptor instead.
func (*ListEarnerHistoricalRewardsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP(), []int{39}
}

func (x *ListEarnerHistoricalRewardsResponse) GetRewards() []*HistoricalReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ListEarnerHistoricalRewardsResponse) GetNextPage() *common.Pagination {
	if x != nil {
		return x.NextPage
	}
	return nil
}

var File_eigenlayer_sidecar_v1_rewards_rewards_proto protoreflect.FileDescriptor

var file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDesc = string([]byte{
	0x0a, 0x2b, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x65, 0x69, 0x67,
	0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6c, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x0b,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x74,
	0x6f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0xa4,
	0x01, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x74, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x74, 0x6f, 0x66,
	0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x74, 0x6f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x61, 0x69, 0x74,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x1f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x22,
	0x4c, 0x0a, 0x1e, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x61,
	0x69, 0x74, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x39, 0x0a,
	0x1f, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x22, 0x3d, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x74,
	0x6f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x22, 0x73, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x43, 0x61, 0x6c, 0x63, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x62, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x22, 0x60, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f,
	0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x22, 0x45, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x46, 0x6f, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x72, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x68, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f, 0x72,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x78, 0x0a, 0x29, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x30, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x46,
	0x6f, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x31, 0x47, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x46, 0x6f, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x29, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x42, 0x79, 0x41, 0x76, 0x73, 0x46, 0x6f, 0x72,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x6f, 0x6f,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x69, 0x67,
	0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x0e, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xb7, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x42, 0x79,
	0x41, 0x76, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x41, 0x76, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x22, 0x66, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x5e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x7f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6d, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3b, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x78, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x61,
	0x72, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x44, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x6a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65,
	0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22,
	0x57, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x7f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x12, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x11, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x25, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x70, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65,
	0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x25, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x69, 0x67,
	0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x69,
	0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x49, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0xc6, 0x02, 0x0a, 0x22, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x01, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc8, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x69,
	0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x42, 0x96, 0x02,
	0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x42, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4c, 0x61, 0x79, 0x72, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0xa2, 0x02, 0x04, 0x45, 0x53, 0x56, 0x52, 0xaa, 0x02, 0x1d, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x56, 0x31, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0xca, 0x02, 0x1d, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31, 0x5c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0xe2, 0x02, 0x29, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31, 0x5c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x20, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x3a, 0x3a, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescOnce sync.Once
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescData []byte
)

func file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescGZIP() []byte {
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescOnce.Do(func() {
		file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDesc), len(file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDesc)))
	})
	return file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDescData
}

var file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_eigenlayer_sidecar_v1_rewards_rewards_proto_goTypes = []any{
	(*GetRewardsRootRequest)(nil),                             // 0: eigenlayer.sidecar.v1.rewards.GetRewardsRootRequest
	(*GetRewardsRootResponse)(nil),                            // 1: eigenlayer.sidecar.v1.rewards.GetRewardsRootResponse
	(*GenerateRewardsRequest)(nil),                            // 2: eigenlayer.sidecar.v1.rewards.GenerateRewardsRequest
	(*GenerateRewardsResponse)(nil),                           // 3: eigenlayer.sidecar.v1.rewards.GenerateRewardsResponse
	(*GenerateStakerOperatorsRequest)(nil),                    // 4: eigenlayer.sidecar.v1.rewards.GenerateStakerOperatorsRequest
	(*GenerateStakerOperatorsResponse)(nil),                   // 5: eigenlayer.sidecar.v1.rewards.GenerateStakerOperatorsResponse
	(*BackfillStakerOperatorsRequest)(nil),                    // 6: eigenlayer.sidecar.v1.rewards.BackfillStakerOperatorsRequest
	(*BackfillStakerOperatorsResponse)(nil),                   // 7: eigenlayer.sidecar.v1.rewards.BackfillStakerOperatorsResponse
	(*GenerateRewardsRootRequest)(nil),                        // 8: eigenlayer.sidecar.v1.rewards.GenerateRewardsRootRequest
	(*GenerateRewardsRootResponse)(nil),                       // 9: eigenlayer.sidecar.v1.rewards.GenerateRewardsRootResponse
	(*GetRewardsForSnapshotRequest)(nil),                      // 10: eigenlayer.sidecar.v1.rewards.GetRewardsForSnapshotRequest
	(*GetRewardsForSnapshotResponse)(nil),                     // 11: eigenlayer.sidecar.v1.rewards.GetRewardsForSnapshotResponse
	(*GetRewardsForDistributionRootRequest)(nil),              // 12: eigenlayer.sidecar.v1.rewards.GetRewardsForDistributionRootRequest
	(*GetRewardsForDistributionRootResponse)(nil),             // 13: eigenlayer.sidecar.v1.rewards.GetRewardsForDistributionRootResponse
	(*GetAttributableRewardsForSnapshotRequest)(nil),          // 14: eigenlayer.sidecar.v1.rewards.GetAttributableRewardsForSnapshotRequest
	(*GetAttributableRewardsForSnapshotResponse)(nil),         // 15: eigenlayer.sidecar.v1.rewards.GetAttributableRewardsForSnapshotResponse
	(*GetAttributableRewardsForDistributionRootRequest)(nil),  // 16: eigenlayer.sidecar.v1.rewards.GetAttributableRewardsForDistributionRootRequest
	(*GetAttributableRewardsForDistributionRootResponse)(nil), // 17: eigenlayer.sidecar.v1.rewards.GetAttributableRewardsForDistributionRootResponse
	(*GetRewardsByAvsForDistributionRootRequest)(nil),         // 18: eigenlayer.sidecar.v1.rewards.GetRewardsByAvsForDistributionRootRequest
	(*GetRewardsByAvsForDistributionRootResponse)(nil),        // 19: eigenlayer.sidecar.v1.rewards.GetRewardsByAvsForDistributionRootResponse
	(*GenerateClaimProofRequest)(nil),                         // 20: eigenlayer.sidecar.v1.rewards.GenerateClaimProofRequest
	(*GenerateClaimProofResponse)(nil),                        // 21: eigenlayer.sidecar.v1.rewards.GenerateClaimProofResponse
	(*GetClaimableRewardsRequest)(nil),                        // 22: eigenlayer.sidecar.v1.rewards.GetClaimableRewardsRequest
	(*GetClaimableRewardsResponse)(nil),                       // 23: eigenlayer.sidecar.v1.rewards.GetClaimableRewardsResponse
	(*GetTotalClaimedRewardsRequest)(nil),                     // 24: eigenlayer.sidecar.v1.rewards.GetTotalClaimedRewardsRequest
	(*GetTotalClaimedRewardsResponse)(nil),                    // 25: eigenlayer.sidecar.v1.rewards.GetTotalClaimedRewardsResponse
	(*GetAvailableRewardsTokensRequest)(nil),                  // 26: eigenlayer.sidecar.v1.rewards.GetAvailableRewardsTokensRequest
	(*GetAvailableRewardsTokensResponse)(nil),                 // 27: eigenlayer.sidecar.v1.rewards.GetAvailableRewardsTokensResponse
	(*GetSummarizedRewardsForEarnerRequest)(nil),              // 28: eigenlayer.sidecar.v1.rewards.GetSummarizedRewardsForEarnerRequest
	(*GetSummarizedRewardsForEarnerResponse)(nil),             // 29: eigenlayer.sidecar.v1.rewards.GetSummarizedRewardsForEarnerResponse
	(*GetClaimedRewardsByBlockRequest)(nil),                   // 30: eigenlayer.sidecar.v1.rewards.GetClaimedRewardsByBlockRequest
	(*GetClaimedRewardsByBlockResponse)(nil),                  // 31: eigenlayer.sidecar.v1.rewards.GetClaimedRewardsByBlockResponse
	(*ListDistributionRootsRequest)(nil),                      // 32: eigenlayer.sidecar.v1.rewards.ListDistributionRootsRequest
	(*ListDistributionRootsResponse)(nil),                     // 33: eigenlayer.sidecar.v1.rewards.ListDistributionRootsResponse
	(*ListClaimedRewardsByBlockRangeRequest)(nil),             // 34: eigenlayer.sidecar.v1.rewards.ListClaimedRewardsByBlockRangeRequest
	(*ListClaimedRewardsByBlockRangeResponse)(nil),            // 35: eigenlayer.sidecar.v1.rewards.ListClaimedRewardsByBlockRangeResponse
	(*ListEarnerLifetimeRewardsRequest)(nil),                  // 36: eigenlayer.sidecar.v1.rewards.ListEarnerLifetimeRewardsRequest
	(*ListEarnerLifetimeRewardsResponse)(nil),                 // 37: eigenlayer.sidecar.v1.rewards.ListEarnerLifetimeRewardsResponse
	(*ListEarnerHistoricalRewardsRequest)(nil),                // 38: eigenlayer.sidecar.v1.rewards.ListEarnerHistoricalRewardsRequest
	(*ListEarnerHistoricalRewardsResponse)(nil),               // 39: eigenlayer.sidecar.v1.rewards.ListEarnerHistoricalRewardsResponse
	(*DistributionRoot)(nil),                                  // 40: eigenlayer.sidecar.v1.rewards.DistributionRoot
	(*Reward)(nil),                                            // 41: eigenlayer.sidecar.v1.rewards.Reward
	(*AttributableReward)(nil),                                // 42: eigenlayer.sidecar.v1.rewards.AttributableReward
	(*common.Pagination)(nil),                                 // 43: eigenlayer.sidecar.v1.common.Pagination
	(*AvsReward)(nil),                                         // 44: eigenlayer.sidecar.v1.rewards.AvsReward
	(*wrapperspb.Int64Value)(nil),                             // 45: google.protobuf.Int64Value
	(*Proof)(nil),                                             // 46: eigenlayer.sidecar.v1.rewards.Proof
	(*TotalClaimedReward)(nil),                                // 47: eigenlayer.sidecar.v1.rewards.TotalClaimedReward
	(*SummarizedEarnerReward)(nil),                            // 48: eigenlayer.sidecar.v1.rewards.SummarizedEarnerReward
	(*ClaimedReward)(nil),                                     // 49: eigenlayer.sidecar.v1.rewards.ClaimedReward
	(*RewardAmount)(nil),                                      // 50: eigenlayer.sidecar.v1.rewards.RewardAmount
	(*HistoricalReward)(nil),                                  // 51: eigenlayer.sidecar.v1.rewards.HistoricalReward
}
var file_eigenlayer_sidecar_v1_rewards_rewards_proto_depIdxs = []int32{
	40, // 0: eigenlayer.sidecar.v1.rewards.GetRewardsRootResponse.rewards_root:type_name -> eigenlayer.sidecar.v1.rewards.DistributionRoot
	41, // 1: eigenlayer.sidecar.v1.rewards.GenerateRewardsResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.Reward
	41, // 2: eigenlayer.sidecar.v1.rewards.GetRewardsForSnapshotResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.Reward
	41, // 3: eigenlayer.sidecar.v1.rewards.GetRewardsForDistributionRootResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.Reward
	42, // 4: eigenlayer.sidecar.v1.rewards.GetAttributableRewardsForSnapshotResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.AttributableReward
	42, // 5: eigenlayer.sidecar.v1.rewards.GetAttributableRewardsForDistributionRootResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.AttributableReward
	43, // 6: eigenlayer.sidecar.v1.rewards.GetRewardsByAvsForDistributionRootRequest.pagination:type_name -> eigenlayer.sidecar.v1.common.Pagination
	44, // 7: eigenlayer.sidecar.v1.rewards.GetRewardsByAvsForDistributionRootResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.AvsReward
	43, // 8: eigenlayer.sidecar.v1.rewards.GetRewardsByAvsForDistributionRootResponse.next_page:type_name -> eigenlayer.sidecar.v1.common.Pagination
	45, // 9: eigenlayer.sidecar.v1.rewards.GenerateClaimProofRequest.root_index:type_name -> google.protobuf.Int64Value
	46, // 10: eigenlayer.sidecar.v1.rewards.GenerateClaimProofResponse.proof:type_name -> eigenlayer.sidecar.v1.rewards.Proof
	41, // 11: eigenlayer.sidecar.v1.rewards.GetClaimableRewardsResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.Reward
	47, // 12: eigenlayer.sidecar.v1.rewards.GetTotalClaimedRewardsResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.TotalClaimedReward
	48, // 13: eigenlayer.sidecar.v1.rewards.GetSummarizedRewardsForEarnerResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.SummarizedEarnerReward
	49, // 14: eigenlayer.sidecar.v1.rewards.GetClaimedRewardsByBlockResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.ClaimedReward
	40, // 15: eigenlayer.sidecar.v1.rewards.ListDistributionRootsResponse.distribution_roots:type_name -> eigenlayer.sidecar.v1.rewards.DistributionRoot
	49, // 16: eigenlayer.sidecar.v1.rewards.ListClaimedRewardsByBlockRangeResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.ClaimedReward
	43, // 17: eigenlayer.sidecar.v1.rewards.ListEarnerLifetimeRewardsRequest.pagination:type_name -> eigenlayer.sidecar.v1.common.Pagination
	50, // 18: eigenlayer.sidecar.v1.rewards.ListEarnerLifetimeRewardsResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.RewardAmount
	43, // 19: eigenlayer.sidecar.v1.rewards.ListEarnerLifetimeRewardsResponse.nextPage:type_name -> eigenlayer.sidecar.v1.common.Pagination
	43, // 20: eigenlayer.sidecar.v1.rewards.ListEarnerHistoricalRewardsRequest.pagination:type_name -> eigenlayer.sidecar.v1.common.Pagination
	51, // 21: eigenlayer.sidecar.v1.rewards.ListEarnerHistoricalRewardsResponse.rewards:type_name -> eigenlayer.sidecar.v1.rewards.HistoricalReward
	43, // 22: eigenlayer.sidecar.v1.rewards.ListEarnerHistoricalRewardsResponse.nextPage:type_name -> eigenlayer.sidecar.v1.common.Pagination
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_eigenlayer_sidecar_v1_rewards_rewards_proto_init() }
func file_eigenlayer_sidecar_v1_rewards_rewards_proto_init() {
	if File_eigenlayer_sidecar_v1_rewards_rewards_proto != nil {
		return
	}
	file_eigenlayer_sidecar_v1_rewards_common_proto_init()
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[3].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[10].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[18].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[20].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[24].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[26].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[28].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[32].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[36].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[37].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[38].OneofWrappers = []any{}
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes[39].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDesc), len(file_eigenlayer_sidecar_v1_rewards_rewards_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eigenlayer_sidecar_v1_rewards_rewards_proto_goTypes,
		DependencyIndexes: file_eigenlayer_sidecar_v1_rewards_rewards_proto_depIdxs,
		MessageInfos:      file_eigenlayer_sidecar_v1_rewards_rewards_proto_msgTypes,
	}.Build()
	File_eigenlayer_sidecar_v1_rewards_rewards_proto = out.File
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_goTypes = nil
	file_eigenlayer_sidecar_v1_rewards_rewards_proto_depIdxs = nil
}
