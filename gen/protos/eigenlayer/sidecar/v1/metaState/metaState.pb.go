// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: eigenlayer/sidecar/v1/metaState/metaState.proto

package metaState

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionMetadata struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionHash string                 `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	LogIndex        uint64                 `protobuf:"varint,2,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	BlockHeight     uint64                 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransactionMetadata) Reset() {
	*x = TransactionMetadata{}
	mi := &file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMetadata) ProtoMessage() {}

func (x *TransactionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMetadata.ProtoReflect.Descriptor instead.
func (*TransactionMetadata) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionMetadata) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *TransactionMetadata) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *TransactionMetadata) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GenerationReservationCreated struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Avs                 string                 `protobuf:"bytes,1,opt,name=avs,proto3" json:"avs,omitempty"`
	OperatorSetId       uint64                 `protobuf:"varint,2,opt,name=operator_set_id,json=operatorSetId,proto3" json:"operator_set_id,omitempty"`
	TransactionMetadata *TransactionMetadata   `protobuf:"bytes,3,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GenerationReservationCreated) Reset() {
	*x = GenerationReservationCreated{}
	mi := &file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationReservationCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationReservationCreated) ProtoMessage() {}

func (x *GenerationReservationCreated) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationReservationCreated.ProtoReflect.Descriptor instead.
func (*GenerationReservationCreated) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescGZIP(), []int{1}
}

func (x *GenerationReservationCreated) GetAvs() string {
	if x != nil {
		return x.Avs
	}
	return ""
}

func (x *GenerationReservationCreated) GetOperatorSetId() uint64 {
	if x != nil {
		return x.OperatorSetId
	}
	return 0
}

func (x *GenerationReservationCreated) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type KeyRotationScheduled struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Avs                 string                 `protobuf:"bytes,1,opt,name=avs,proto3" json:"avs,omitempty"`
	OperatorSetId       uint32                 `protobuf:"varint,2,opt,name=operator_set_id,json=operatorSetId,proto3" json:"operator_set_id,omitempty"`
	Operator            string                 `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	CurveType           string                 `protobuf:"bytes,4,opt,name=curve_type,json=curveType,proto3" json:"curve_type,omitempty"`
	OldPubkey           string                 `protobuf:"bytes,5,opt,name=old_pubkey,json=oldPubkey,proto3" json:"old_pubkey,omitempty"`
	NewPubkey           string                 `protobuf:"bytes,6,opt,name=new_pubkey,json=newPubkey,proto3" json:"new_pubkey,omitempty"`
	ActivateAt          uint64                 `protobuf:"varint,7,opt,name=activate_at,json=activateAt,proto3" json:"activate_at,omitempty"`
	TransactionMetadata *TransactionMetadata   `protobuf:"bytes,8,opt,name=transaction_metadata,json=transactionMetadata,proto3" json:"transaction_metadata,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *KeyRotationScheduled) Reset() {
	*x = KeyRotationScheduled{}
	mi := &file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyRotationScheduled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRotationScheduled) ProtoMessage() {}

func (x *KeyRotationScheduled) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRotationScheduled.ProtoReflect.Descriptor instead.
func (*KeyRotationScheduled) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescGZIP(), []int{2}
}

func (x *KeyRotationScheduled) GetAvs() string {
	if x != nil {
		return x.Avs
	}
	return ""
}

func (x *KeyRotationScheduled) GetOperatorSetId() uint32 {
	if x != nil {
		return x.OperatorSetId
	}
	return 0
}

func (x *KeyRotationScheduled) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *KeyRotationScheduled) GetCurveType() string {
	if x != nil {
		return x.CurveType
	}
	return ""
}

func (x *KeyRotationScheduled) GetOldPubkey() string {
	if x != nil {
		return x.OldPubkey
	}
	return ""
}

func (x *KeyRotationScheduled) GetNewPubkey() string {
	if x != nil {
		return x.NewPubkey
	}
	return ""
}

func (x *KeyRotationScheduled) GetActivateAt() uint64 {
	if x != nil {
		return x.ActivateAt
	}
	return 0
}

func (x *KeyRotationScheduled) GetTransactionMetadata() *TransactionMetadata {
	if x != nil {
		return x.TransactionMetadata
	}
	return nil
}

type MetaStateChange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Change:
	//
	//	*MetaStateChange_GenerationReservationCreated
	//	*MetaStateChange_KeyRotationScheduled
	Change        isMetaStateChange_Change `protobuf_oneof:"change"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaStateChange) Reset() {
	*x = MetaStateChange{}
	mi := &file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaStateChange) ProtoMessage() {}

func (x *MetaStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaStateChange.ProtoReflect.Descriptor instead.
func (*MetaStateChange) Descriptor() ([]byte, []int) {
	return file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescGZIP(), []int{3}
}

func (x *MetaStateChange) GetChange() isMetaStateChange_Change {
	if x != nil {
		return x.Change
	}
	return nil
}

func (x *MetaStateChange) GetGenerationReservationCreated() *GenerationReservationCreated {
	if x != nil {
		if x, ok := x.Change.(*MetaStateChange_GenerationReservationCreated); ok {
			return x.GenerationReservationCreated
		}
	}
	return nil
}

func (x *MetaStateChange) GetKeyRotationScheduled() *KeyRotationScheduled {
	if x != nil {
		if x, ok := x.Change.(*MetaStateChange_KeyRotationScheduled); ok {
			return x.KeyRotationScheduled
		}
	}
	return nil
}

type isMetaStateChange_Change interface {
	isMetaStateChange_Change()
}

type MetaStateChange_GenerationReservationCreated struct {
	GenerationReservationCreated *GenerationReservationCreated `protobuf:"bytes,1,opt,name=generation_reservation_created,json=generationReservationCreated,proto3,oneof"`
}

type MetaStateChange_KeyRotationScheduled struct {
	KeyRotationScheduled *KeyRotationScheduled `protobuf:"bytes,2,opt,name=key_rotation_scheduled,json=keyRotationScheduled,proto3,oneof"`
}

func (*MetaStateChange_GenerationReservationCreated) isMetaStateChange_Change() {}

func (*MetaStateChange_KeyRotationScheduled) isMetaStateChange_Change() {}

var File_eigenlayer_sidecar_v1_metaState_metaState_proto protoreflect.FileDescriptor

var file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDesc = string([]byte{
	0x0a, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x76, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x76, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x67, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd3, 0x02, 0x0a, 0x14, 0x4b,
	0x65, 0x79, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x76, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x76, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72,
	0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x75, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c,
	0x64, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77,
	0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x67, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x92, 0x02, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x1e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x1c,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x16,
	0x6b, 0x65, 0x79, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4b,
	0x65, 0x79, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x14, 0x6b, 0x65, 0x79, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0xa4, 0x02, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x69,
	0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x4d,
	0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x72,
	0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2d, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65,
	0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0xa2, 0x02,
	0x04, 0x45, 0x53, 0x56, 0x4d, 0xaa, 0x02, 0x1f, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x56, 0x31, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0xca, 0x02, 0x1f, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56, 0x31, 0x5c,
	0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0xe2, 0x02, 0x2b, 0x45, 0x69, 0x67, 0x65,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5c, 0x56,
	0x31, 0x5c, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x22, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x3a, 0x3a, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x3a, 0x3a, 0x56,
	0x31, 0x3a, 0x3a, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescOnce sync.Once
	file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescData []byte
)

func file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescGZIP() []byte {
	file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescOnce.Do(func() {
		file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDesc), len(file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDesc)))
	})
	return file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDescData
}

var file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_eigenlayer_sidecar_v1_metaState_metaState_proto_goTypes = []any{
	(*TransactionMetadata)(nil),          // 0: eigenlayer.sidecar.v1.metaState.TransactionMetadata
	(*GenerationReservationCreated)(nil), // 1: eigenlayer.sidecar.v1.metaState.GenerationReservationCreated
	(*KeyRotationScheduled)(nil),         // 2: eigenlayer.sidecar.v1.metaState.KeyRotationScheduled
	(*MetaStateChange)(nil),              // 3: eigenlayer.sidecar.v1.metaState.MetaStateChange
}
var file_eigenlayer_sidecar_v1_metaState_metaState_proto_depIdxs = []int32{
	0, // 0: eigenlayer.sidecar.v1.metaState.GenerationReservationCreated.transaction_metadata:type_name -> eigenlayer.sidecar.v1.metaState.TransactionMetadata
	0, // 1: eigenlayer.sidecar.v1.metaState.KeyRotationScheduled.transaction_metadata:type_name -> eigenlayer.sidecar.v1.metaState.TransactionMetadata
	1, // 2: eigenlayer.sidecar.v1.metaState.MetaStateChange.generation_reservation_created:type_name -> eigenlayer.sidecar.v1.metaState.GenerationReservationCreated
	2, // 3: eigenlayer.sidecar.v1.metaState.MetaStateChange.key_rotation_scheduled:type_name -> eigenlayer.sidecar.v1.metaState.KeyRotationScheduled
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_eigenlayer_sidecar_v1_metaState_metaState_proto_init() }
func file_eigenlayer_sidecar_v1_metaState_metaState_proto_init() {
	if File_eigenlayer_sidecar_v1_metaState_metaState_proto != nil {
		return
	}
	file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes[3].OneofWrappers = []any{
		(*MetaStateChange_GenerationReservationCreated)(nil),
		(*MetaStateChange_KeyRotationScheduled)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDesc), len(file_eigenlayer_sidecar_v1_metaState_metaState_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eigenlayer_sidecar_v1_metaState_metaState_proto_goTypes,
		DependencyIndexes: file_eigenlayer_sidecar_v1_metaState_metaState_proto_depIdxs,
		MessageInfos:      file_eigenlayer_sidecar_v1_metaState_metaState_proto_msgTypes,
	}.Build()
	File_eigenlayer_sidecar_v1_metaState_metaState_proto = out.File
	file_eigenlayer_sidecar_v1_metaState_metaState_proto_goTypes = nil
	file_eigenlayer_sidecar_v1_metaState_metaState_proto_depIdxs = nil
}
