{
  "swagger": "2.0",
  "info": {
    "title": "eigenlayer/sidecar/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Rpc"
    },
    {
      "name": "Health"
    },
    {
      "name": "Protocol"
    },
    {
      "name": "Rewards"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/protocol/v1/operators/{operatorAddress}/delegated-stakers": {
      "get": {
        "summary": "GetDelegatedStakersForOperator returns the list of stakers that have delegated to an operator.\nBlockHeight is optional, otherwise latest is used.",
        "operationId": "Protocol_GetDelegatedStakersForOperator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDelegatedStakersForOperatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "operatorAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockHeight",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/protocol/v1/operators/{operatorAddress}/delegated-strategies": {
      "get": {
        "summary": "GetDelegatedStrategiesForOperator returns strategies an Operator has delegated",
        "operationId": "Protocol_GetDelegatedStrategiesForOperator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDelegatedStrategiesForOperatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "operatorAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockHeight",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/protocol/v1/operators/{operatorAddress}/registered-avs": {
      "get": {
        "summary": "GetRegisteredAvsForOperator returns the list of registered AVs for a given operator\nBlockHeight is optional, otherwise latest is used.",
        "operationId": "Protocol_GetRegisteredAvsForOperator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRegisteredAvsForOperatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "operatorAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockHeight",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/protocol/v1/operators/{operatorAddress}/strategies/{strategyAddress}/delegated-stake": {
      "get": {
        "summary": "GetOperatorDelegatedStakeForStrategy returns the amount of delegated stake for a given strategy for an operator",
        "operationId": "Protocol_GetOperatorDelegatedStakeForStrategy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOperatorDelegatedStakeForStrategyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "operatorAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "strategyAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockHeight",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/protocol/v1/stakers/{stakerAddress}/shares": {
      "get": {
        "summary": "GetStakerShares returns the shares of a staker, and optionally, the operator operator they've delegated to and\nthe AVS the operator has registered with.",
        "operationId": "Protocol_GetStakerShares",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStakerSharesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "stakerAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockHeight",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/rewards/v1/attributable-rewards-by-root/{distributionRoot}": {
      "get": {
        "operationId": "Rewards_GetAttributableRewardsForDistributionRoot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAttributableRewardsForDistributionRootResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "distributionRoot",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/attributable-rewards/{snapshot}": {
      "get": {
        "summary": "GetAttributableRewardsForSnapshot returns the attributable rewards for the provided snapshot.\nThis takes the cumulative rewards amounts and breaks them down across operators, avss, strategies, etc",
        "operationId": "Rewards_GetAttributableRewardsForSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAttributableRewardsForSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "snapshot",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/backfill-staker-operators": {
      "post": {
        "operationId": "Rewards_BackfillStakerOperators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BackfillStakerOperatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BackfillStakerOperatorsRequest"
            }
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/blocks/{blockHeight}/claimed-rewards": {
      "get": {
        "summary": "GetClaimedRewardsByBlock returns the claimed rewards for the given block height",
        "operationId": "Rewards_GetClaimedRewardsByBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetClaimedRewardsByBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blockHeight",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/blocks/{blockHeight}/rewards-root": {
      "get": {
        "summary": "GetRewardsRoot returns the posted on-chain root for the give block height",
        "operationId": "Rewards_GetRewardsRoot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRewardsRootResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blockHeight",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/claim-proof": {
      "post": {
        "summary": "GenerateClaimProof generates a proof for the given earner address and tokens for claiming\ntokens against the RewardsCoordinator",
        "operationId": "Rewards_GenerateClaimProof",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateClaimProofResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GenerateClaimProofRequest"
            }
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/earners/{earnerAddress}/available-rewards": {
      "get": {
        "summary": "GetAvailableRewards returns the available rewards for the given earner address\nThis takes the amount earned from the current active root and subtracts total claimed.",
        "operationId": "Rewards_GetAvailableRewards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvailableRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "earnerAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/earners/{earnerAddress}/available-rewards-tokens": {
      "get": {
        "summary": "GetAvailableRewardsTokens returns the available rewards tokens for the given earner address",
        "operationId": "Rewards_GetAvailableRewardsTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvailableRewardsTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "earnerAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/earners/{earnerAddress}/summarized-rewards": {
      "get": {
        "summary": "GetSummarizedRewardsForEarner returns the summarized rewards for the given earner address, including how much\ntheyve earned, how much is currently claimable, and how much has been claimed.",
        "operationId": "Rewards_GetSummarizedRewardsForEarner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSummarizedRewardsForEarnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "earnerAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockHeight",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/earners/{earnerAddress}/total-claimed-rewards": {
      "get": {
        "summary": "GetTotalClaimedRewards returns the total claimed rewards for the given earner address\nBlockHeight is optional. If omitted, the latest block height is used.",
        "operationId": "Rewards_GetTotalClaimedRewards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTotalClaimedRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "earnerAddress",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "blockHeight",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/generate-rewards": {
      "post": {
        "summary": "GenerateRewards generates rewards for the given cutoff_date.\nIf respondWithRewardsData is true, the response will include the rewards data, otherwise\nthe sidecar will cache the data to be requested later.",
        "operationId": "Rewards_GenerateRewards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GenerateRewardsRequest"
            }
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/generate-rewards-root": {
      "post": {
        "summary": "GenerateRewardsRoot generates a rewards root for the given snapshot.\nReturns an error if the rewards have not been generated for the snapshot.",
        "operationId": "Rewards_GenerateRewardsRoot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateRewardsRootResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GenerateRewardsRootRequest"
            }
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/generate-staker-operators": {
      "post": {
        "operationId": "Rewards_GenerateStakerOperators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateStakerOperatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GenerateStakerOperatorsRequest"
            }
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/rewards/{snapshot}": {
      "get": {
        "summary": "GetRewardsForSnapshot returns the rewards for the provided snapshot.\nUseful if you generated the rewards and want to fetch them later.",
        "operationId": "Rewards_GetRewardsForSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRewardsForSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "snapshot",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rpc/v1/latest-block": {
      "post": {
        "operationId": "Rpc_GetBlockHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBlockHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetBlockHeightRequest"
            }
          }
        ],
        "tags": [
          "Rpc"
        ]
      }
    },
    "/rpc/v1/state-roots/{blockNumber}": {
      "post": {
        "operationId": "Rpc_GetStateRoot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStateRootResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blockNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RpcGetStateRootBody"
            }
          }
        ],
        "tags": [
          "Rpc"
        ]
      }
    },
    "/v1/health": {
      "get": {
        "operationId": "Health_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Health"
        ]
      }
    },
    "/v1/ready": {
      "get": {
        "operationId": "Health_ReadyCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReadyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    }
  },
  "definitions": {
    "HealthCheckResponseServingStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SERVING",
        "NOT_SERVING",
        "SERVICE_UNKNOWN"
      ],
      "default": "UNKNOWN",
      "description": " - SERVICE_UNKNOWN: Used only by the Watch method."
    },
    "RpcGetStateRootBody": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AttributableReward": {
      "type": "object",
      "properties": {
        "earner": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "avs": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "multiplier": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "shares": {
          "type": "string"
        },
        "rewardHash": {
          "type": "string"
        },
        "snapshot": {
          "type": "string"
        }
      }
    },
    "v1BackfillStakerOperatorsRequest": {
      "type": "object",
      "properties": {
        "waitForComplete": {
          "type": "boolean"
        }
      }
    },
    "v1BackfillStakerOperatorsResponse": {
      "type": "object",
      "properties": {
        "queued": {
          "type": "boolean"
        }
      }
    },
    "v1ClaimedReward": {
      "type": "object",
      "properties": {
        "earner": {
          "type": "string"
        },
        "claimer": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "distributionRoot": {
          "type": "string"
        }
      }
    },
    "v1DistributionRoot": {
      "type": "object",
      "properties": {
        "root": {
          "type": "string"
        },
        "blockHeight": {
          "type": "string",
          "format": "uint64"
        },
        "calculationEndTimestamp": {
          "type": "string",
          "format": "uint64"
        },
        "activatedAt": {
          "type": "string",
          "format": "uint64"
        },
        "disabled": {
          "type": "boolean"
        }
      }
    },
    "v1EarnerLeaf": {
      "type": "object",
      "properties": {
        "earner": {
          "type": "string"
        },
        "earnerTokenRoot": {
          "type": "string"
        }
      }
    },
    "v1GenerateClaimProofRequest": {
      "type": "object",
      "properties": {
        "earnerAddress": {
          "type": "string"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "snapshot": {
          "type": "string"
        }
      }
    },
    "v1GenerateClaimProofResponse": {
      "type": "object",
      "properties": {
        "proof": {
          "$ref": "#/definitions/v1Proof"
        }
      }
    },
    "v1GenerateRewardsRequest": {
      "type": "object",
      "properties": {
        "cutoffDate": {
          "type": "string"
        },
        "respondWithRewardsData": {
          "type": "boolean"
        },
        "waitForComplete": {
          "type": "boolean"
        }
      }
    },
    "v1GenerateRewardsResponse": {
      "type": "object",
      "properties": {
        "cutoffDate": {
          "type": "string"
        },
        "rewards": {
          "$ref": "#/definitions/v1Reward",
          "title": "Returned if respondWithRewardsData is true in the request"
        },
        "queued": {
          "type": "boolean"
        }
      }
    },
    "v1GenerateRewardsRootRequest": {
      "type": "object",
      "properties": {
        "cutoffDate": {
          "type": "string",
          "title": "The date to calculate rewards up to, exclusive"
        }
      }
    },
    "v1GenerateRewardsRootResponse": {
      "type": "object",
      "properties": {
        "rewardsRoot": {
          "type": "string"
        },
        "rewardsCalcEndDate": {
          "type": "string"
        }
      }
    },
    "v1GenerateStakerOperatorsRequest": {
      "type": "object",
      "properties": {
        "cutoffDate": {
          "type": "string"
        },
        "waitForComplete": {
          "type": "boolean"
        }
      }
    },
    "v1GenerateStakerOperatorsResponse": {
      "type": "object",
      "properties": {
        "queued": {
          "type": "boolean"
        }
      }
    },
    "v1GetAttributableRewardsForDistributionRootResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AttributableReward"
          }
        }
      }
    },
    "v1GetAttributableRewardsForSnapshotResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AttributableReward"
          }
        }
      }
    },
    "v1GetAvailableRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Reward"
          }
        }
      }
    },
    "v1GetAvailableRewardsTokensResponse": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetBlockHeightRequest": {
      "type": "object",
      "properties": {
        "verified": {
          "type": "boolean"
        }
      }
    },
    "v1GetBlockHeightResponse": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string",
          "format": "uint64"
        },
        "blockHash": {
          "type": "string"
        }
      }
    },
    "v1GetClaimedRewardsByBlockResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ClaimedReward"
          }
        }
      }
    },
    "v1GetDelegatedStakersForOperatorResponse": {
      "type": "object",
      "properties": {
        "stakerAddress": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetDelegatedStrategiesForOperatorResponse": {
      "type": "object",
      "properties": {
        "strategyAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetOperatorDelegatedStakeForStrategyResponse": {
      "type": "object",
      "properties": {
        "shares": {
          "type": "string"
        },
        "avsAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetRegisteredAvsForOperatorResponse": {
      "type": "object",
      "properties": {
        "avsAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetRewardsForSnapshotResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Reward"
          }
        }
      }
    },
    "v1GetRewardsRootResponse": {
      "type": "object",
      "properties": {
        "rewardsRoot": {
          "$ref": "#/definitions/v1DistributionRoot"
        }
      }
    },
    "v1GetStakerSharesResponse": {
      "type": "object",
      "properties": {
        "shares": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StakerShare"
          }
        }
      }
    },
    "v1GetStateRootResponse": {
      "type": "object",
      "properties": {
        "ethBlockNumber": {
          "type": "string",
          "format": "uint64"
        },
        "ethBlockHash": {
          "type": "string"
        },
        "stateRoot": {
          "type": "string"
        }
      }
    },
    "v1GetSummarizedRewardsForEarnerResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SummarizedEarnerReward"
          }
        }
      }
    },
    "v1GetTotalClaimedRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Reward"
          }
        }
      }
    },
    "v1HealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/HealthCheckResponseServingStatus"
        }
      }
    },
    "v1Proof": {
      "type": "object",
      "properties": {
        "root": {
          "type": "string"
        },
        "rootIndex": {
          "type": "integer",
          "format": "int64"
        },
        "earnerIndex": {
          "type": "integer",
          "format": "int64"
        },
        "earnerTreeProof": {
          "type": "string"
        },
        "earnerLeaf": {
          "$ref": "#/definitions/v1EarnerLeaf"
        },
        "leafIndices": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "tokenTreeProofs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokenLeaves": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TokenLeaf"
          }
        }
      }
    },
    "v1ReadyResponse": {
      "type": "object",
      "properties": {
        "ready": {
          "type": "boolean"
        }
      }
    },
    "v1Reward": {
      "type": "object",
      "properties": {
        "earner": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "snapshot": {
          "type": "string"
        }
      }
    },
    "v1StakerShare": {
      "type": "object",
      "properties": {
        "strategy": {
          "type": "string"
        },
        "shares": {
          "type": "string"
        },
        "operatorAddress": {
          "type": "string",
          "title": "Operator the staker has delegated to if present"
        },
        "avsAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The operator could be regietered with 0 or many AVSs"
        }
      }
    },
    "v1SummarizedEarnerReward": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "earned": {
          "type": "string",
          "title": "Rewards that have been earned but not necessarily activated yet"
        },
        "claimable": {
          "type": "string",
          "title": "total rewards that are claimable (does not account for claimed)"
        },
        "claimed": {
          "type": "string",
          "title": "total rewards that have been claimed"
        }
      }
    },
    "v1TokenLeaf": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "cumulativeEarnings": {
          "type": "string"
        }
      }
    }
  }
}
