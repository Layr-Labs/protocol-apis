{
  "swagger": "2.0",
  "info": {
    "title": "eigenlayer/sidecar/v1/rewards.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Rewards"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/rewards/v1/claim-proof": {
      "post": {
        "summary": "GenerateClaimProof generates a proof for the given earner address and tokens for claiming\ntokens against the RewardsCoordinator",
        "operationId": "Rewards_GenerateClaimProof",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateClaimProofResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GenerateClaimProofRequest"
            }
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/earners/{earnerAddress}/available-rewards": {
      "get": {
        "summary": "GetAvailableRewards returns the available rewards for the given earner address\nThis takes the amount earned from the current active root and subtracts total claimed.",
        "operationId": "Rewards_GetAvailableRewards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvailableRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "earnerAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/earners/{earnerAddress}/available-rewards-tokens": {
      "get": {
        "summary": "GetAvailableRewardsTokens returns the available rewards tokens for the given earner address",
        "operationId": "Rewards_GetAvailableRewardsTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvailableRewardsTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "earnerAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/earners/{earnerAddress}/total-claimed-rewards": {
      "get": {
        "summary": "GetTotalClaimedRewards returns the total claimed rewards for the given earner address\nBlockHeight is optional. If omitted, the latest block height is used.",
        "operationId": "Rewards_GetTotalClaimedRewards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvailableRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "earnerAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/generate-rewards": {
      "post": {
        "summary": "GenerateRewards generates rewards for the given snapshot.\nIf respondWithRewardsData is true, the response will include the rewards data, otherwise\nthe sidecar will cache the data to be requested later.",
        "operationId": "Rewards_GenerateRewards",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GenerateRewardsRequest"
            }
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/rewards-roots/{blockHeight}": {
      "get": {
        "summary": "GetRewardsRoot returns the rewards root for the given block number",
        "operationId": "Rewards_GetRewardsRoot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRewardsRootResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blockHeight",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    },
    "/rewards/v1/rewards/{snapshot}": {
      "get": {
        "summary": "GetRewardsForSnapshot returns the rewards for the provided snapshot.\nUseful if you generated the rewards and want to fetch them later.",
        "operationId": "Rewards_GetRewardsForSnapshot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRewardsForSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "snapshot",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Rewards"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1EarnerLeaf": {
      "type": "object",
      "properties": {
        "earner": {
          "type": "string"
        },
        "earnerTokenRoot": {
          "type": "string"
        }
      }
    },
    "v1GenerateClaimProofRequest": {
      "type": "object",
      "properties": {
        "earnerAddress": {
          "type": "string"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GenerateClaimProofResponse": {
      "type": "object",
      "properties": {
        "proof": {
          "$ref": "#/definitions/v1Proof"
        }
      }
    },
    "v1GenerateRewardsRequest": {
      "type": "object",
      "properties": {
        "snapshot": {
          "type": "string"
        },
        "respondWithRewardsData": {
          "type": "boolean"
        }
      }
    },
    "v1GenerateRewardsResponse": {
      "type": "object",
      "properties": {
        "snapshot": {
          "type": "string"
        },
        "rewards": {
          "$ref": "#/definitions/v1Reward",
          "title": "Returned if respondWithRewardsData is true in the request"
        }
      }
    },
    "v1GetAvailableRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Reward"
          }
        }
      }
    },
    "v1GetAvailableRewardsTokensResponse": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetRewardsForSnapshotResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Reward"
          }
        }
      }
    },
    "v1GetRewardsRootResponse": {
      "type": "object",
      "properties": {
        "rewardsRoot": {
          "type": "string"
        }
      }
    },
    "v1Proof": {
      "type": "object",
      "properties": {
        "root": {
          "type": "string"
        },
        "rootIndex": {
          "type": "integer",
          "format": "int64"
        },
        "earnerIndex": {
          "type": "integer",
          "format": "int64"
        },
        "earnerTreeProof": {
          "type": "string"
        },
        "earnerLeaf": {
          "$ref": "#/definitions/v1EarnerLeaf"
        },
        "leafIndices": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "tokenTreeProofs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokenLeaves": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TokenLeaf"
          }
        }
      }
    },
    "v1Reward": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "v1TokenLeaf": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "cumulativeEarnings": {
          "type": "string"
        }
      }
    }
  }
}
