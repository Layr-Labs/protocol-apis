# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /aprs/v1/earners/{earnerAddress}/strategies/{strategy}/daily-apr/{date}:
        get:
            tags:
                - Aprs
            operationId: Aprs_GetDailyAprForEarnerStrategy
            parameters:
                - name: earnerAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: strategy
                  in: path
                  required: true
                  schema:
                    type: string
                - name: date
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDailyAprForEarnerStrategyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /aprs/v1/operators/{operatorAddress}/daily-aprs/{date}:
        get:
            tags:
                - Aprs
            operationId: Aprs_GetDailyOperatorStrategyAprs
            parameters:
                - name: operatorAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: date
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDailyOperatorStrategyAprsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /events/v1/stream-eigen-state-changes:
        post:
            tags:
                - Events
            operationId: Events_StreamEigenStateChanges
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StreamEigenStateChangesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StreamEigenStateChangesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /events/v1/stream-indexed-blocks:
        post:
            tags:
                - Events
            operationId: Events_StreamIndexedBlocks
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StreamIndexedBlocksRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StreamIndexedBlocksResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /protocol/v1/eigen-state-changes:
        post:
            tags:
                - Protocol
            operationId: Protocol_GetEigenStateChanges
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetEigenStateChangesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEigenStateChangesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /protocol/v1/operators/{operatorAddress}/delegated-stakers:
        get:
            tags:
                - Protocol
            description: |-
                GetDelegatedStakersForOperator returns the list of stakers that have delegated to an operator.
                 BlockHeight is optional, otherwise latest is used.
            operationId: Protocol_GetDelegatedStakersForOperator
            parameters:
                - name: operatorAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
                - name: pagination.pageNumber
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pagination.pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDelegatedStakersForOperatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /protocol/v1/operators/{operatorAddress}/delegated-strategies:
        get:
            tags:
                - Protocol
            description: GetDelegatedStrategiesForOperator returns strategies an Operator has delegated
            operationId: Protocol_GetDelegatedStrategiesForOperator
            parameters:
                - name: operatorAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDelegatedStrategiesForOperatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /protocol/v1/operators/{operatorAddress}/registered-avs:
        get:
            tags:
                - Protocol
            description: |-
                GetRegisteredAvsForOperator returns the list of registered AVs for a given operator
                 BlockHeight is optional, otherwise latest is used.
            operationId: Protocol_GetRegisteredAvsForOperator
            parameters:
                - name: operatorAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRegisteredAvsForOperatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /protocol/v1/operators/{operatorAddress}/strategies/{strategyAddress}/delegated-stake:
        get:
            tags:
                - Protocol
            description: GetOperatorDelegatedStakeForStrategy returns the amount of delegated stake for a given strategy for an operator
            operationId: Protocol_GetOperatorDelegatedStakeForStrategy
            parameters:
                - name: operatorAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: strategyAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOperatorDelegatedStakeForStrategyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /protocol/v1/stakers/{stakerAddress}/shares:
        get:
            tags:
                - Protocol
            description: |-
                GetStakerShares returns the shares of a staker, and optionally, the operator operator they've delegated to and
                 the AVS the operator has registered with.
            operationId: Protocol_GetStakerShares
            parameters:
                - name: stakerAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStakerSharesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/attributable-rewards-by-root/{distributionRoot}:
        get:
            tags:
                - Rewards
            operationId: Rewards_GetAttributableRewardsForDistributionRoot
            parameters:
                - name: distributionRoot
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAttributableRewardsForDistributionRootResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/attributable-rewards/{snapshot}:
        get:
            tags:
                - Rewards
            description: |-
                GetAttributableRewardsForSnapshot returns the attributable rewards for the provided snapshot.
                 This takes the cumulative rewards amounts and breaks them down across operators, avss, strategies, etc
            operationId: Rewards_GetAttributableRewardsForSnapshot
            parameters:
                - name: snapshot
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAttributableRewardsForSnapshotResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/avs-rewards-by-root/{rootIndex}:
        get:
            tags:
                - Rewards
            operationId: Rewards_GetRewardsByAvsForDistributionRoot
            parameters:
                - name: rootIndex
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRewardsByAvsForDistributionRootResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/backfill-staker-operators:
        post:
            tags:
                - Rewards
            operationId: Rewards_BackfillStakerOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BackfillStakerOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackfillStakerOperatorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/blocks/{blockHeight}/claimed-rewards:
        get:
            tags:
                - Rewards
            description: GetClaimedRewardsByBlock returns the claimed rewards for the provided block height
            operationId: Rewards_GetClaimedRewardsByBlock
            parameters:
                - name: blockHeight
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetClaimedRewardsByBlockResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/blocks/{blockHeight}/rewards-root:
        get:
            tags:
                - Rewards
            description: GetRewardsRoot returns the posted on-chain root for the give block height
            operationId: Rewards_GetRewardsRoot
            parameters:
                - name: blockHeight
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRewardsRootResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/claim-proof:
        post:
            tags:
                - Rewards
            description: |-
                GenerateClaimProof generates a proof for the given earner address and tokens for claiming
                 tokens against the RewardsCoordinator
            operationId: Rewards_GenerateClaimProof
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateClaimProofRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateClaimProofResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/distribution-roots:
        get:
            tags:
                - Rewards
            operationId: Rewards_ListDistributionRoots
            parameters:
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDistributionRootsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/earners/{earnerAddress}/available-rewards-tokens:
        get:
            tags:
                - Rewards
            description: GetAvailableRewardsTokens returns the available rewards tokens for the given earner address
            operationId: Rewards_GetAvailableRewardsTokens
            parameters:
                - name: earnerAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAvailableRewardsTokensResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/earners/{earnerAddress}/claimable-rewards:
        get:
            tags:
                - Rewards
            description: |-
                GetClaimableRewards returns the claimable rewards for the given earner address.
                 This takes the current active tokens earned and subtracts total claimed.
            operationId: Rewards_GetClaimableRewards
            parameters:
                - name: earnerAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetClaimableRewardsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/earners/{earnerAddress}/claimed-rewards:
        get:
            tags:
                - Rewards
            description: |-
                ListClaimedRewardsByBlockRange returns the claimed rewards for the given earner address and block range,
                 inclusive of the start and end block heights
            operationId: Rewards_ListClaimedRewardsByBlockRange
            parameters:
                - name: earnerAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: startBlockHeight
                  in: query
                  schema:
                    type: string
                - name: endBlockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListClaimedRewardsByBlockRangeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/earners/{earnerAddress}/summarized-rewards:
        get:
            tags:
                - Rewards
            description: |-
                GetSummarizedRewardsForEarner returns the summarized rewards for the given earner address, including:
                 - total tokens earned
                 - total tokens active (subset of earned that are in roots that have surpassed their activation delay)
                 - total claimed
                 - total claimable (total active - total claimed)
            operationId: Rewards_GetSummarizedRewardsForEarner
            parameters:
                - name: earnerAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSummarizedRewardsForEarnerResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/earners/{earnerAddress}/total-claimed-rewards:
        get:
            tags:
                - Rewards
            description: |-
                GetTotalClaimedRewards returns the total claimed rewards for the given earner address, summed up to and including
                 the provided blockHeight. If a blockHeight is omitted, the most recent indexed block is used.
            operationId: Rewards_GetTotalClaimedRewards
            parameters:
                - name: earnerAddress
                  in: path
                  required: true
                  schema:
                    type: string
                - name: blockHeight
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTotalClaimedRewardsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/generate-rewards:
        post:
            tags:
                - Rewards
            description: |-
                GenerateRewards generates rewards for the given cutoff_date.
                 If respondWithRewardsData is true, the response will include the rewards data, otherwise
                 the sidecar will cache the data to be requested later.
            operationId: Rewards_GenerateRewards
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateRewardsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateRewardsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/generate-rewards-root:
        post:
            tags:
                - Rewards
            description: |-
                GenerateRewardsRoot generates a rewards root for the given snapshot.
                 Returns an error if the rewards have not been generated for the snapshot.
            operationId: Rewards_GenerateRewardsRoot
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateRewardsRootRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateRewardsRootResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/generate-staker-operators:
        post:
            tags:
                - Rewards
            operationId: Rewards_GenerateStakerOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateStakerOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateStakerOperatorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rewards/v1/rewards/{snapshot}:
        get:
            tags:
                - Rewards
            description: |-
                GetRewardsForSnapshot returns the rewards for the provided snapshot.
                 Useful if you generated the rewards and want to fetch them later.
            operationId: Rewards_GetRewardsForSnapshot
            parameters:
                - name: snapshot
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRewardsForSnapshotResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rpc/v1/about:
        get:
            tags:
                - Rpc
            description: About returns information about the running sidecar process
            operationId: Rpc_About
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AboutResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rpc/v1/latest-block:
        post:
            tags:
                - Rpc
            operationId: Rpc_GetBlockHeight
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetBlockHeightRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBlockHeightResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /rpc/v1/state-roots/{blockNumber}:
        post:
            tags:
                - Rpc
            operationId: Rpc_GetStateRoot
            parameters:
                - name: blockNumber
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStateRootRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStateRootResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/health:
        get:
            tags:
                - Health
            operationId: Health_HealthCheck
            parameters:
                - name: service
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthCheckResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/ready:
        get:
            tags:
                - Health
            operationId: Health_ReadyCheck
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReadyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AboutResponse:
            type: object
            properties:
                version:
                    type: string
                commit:
                    type: string
                chain:
                    type: string
        AttributableReward:
            type: object
            properties:
                earner:
                    type: string
                operator:
                    type: string
                avs:
                    type: string
                token:
                    type: string
                strategy:
                    type: string
                multiplier:
                    type: string
                amount:
                    type: string
                shares:
                    type: string
                rewardHash:
                    type: string
                snapshot:
                    type: string
                rewardType:
                    type: integer
                    format: enum
        AvsOperatorStateChange:
            type: object
            properties:
                avs:
                    type: string
                operator:
                    type: string
                registered:
                    type: boolean
                transactionMetadata:
                    $ref: '#/components/schemas/TransactionMetadata'
        AvsReward:
            type: object
            properties:
                earner:
                    type: string
                avs:
                    type: string
                token:
                    type: string
                amount:
                    type: string
                rewardHash:
                    type: string
                snapshot:
                    type: string
                rewardType:
                    type: integer
                    format: enum
        BackfillStakerOperatorsRequest:
            type: object
            properties:
                waitForComplete:
                    type: boolean
        BackfillStakerOperatorsResponse:
            type: object
            properties:
                queued:
                    type: boolean
        Block:
            type: object
            properties:
                blockNumber:
                    type: string
                blockHash:
                    type: string
                parentHash:
                    type: string
                blockTime:
                    type: string
                    format: date-time
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Transaction'
        ClaimedReward:
            type: object
            properties:
                earner:
                    type: string
                claimer:
                    type: string
                token:
                    type: string
                amount:
                    type: string
                distributionRoot:
                    type: string
                blockNumber:
                    type: string
        DisabledDistributionRoot:
            type: object
            properties:
                rootIndex:
                    type: string
                transactionMetadata:
                    $ref: '#/components/schemas/TransactionMetadata'
        DistributionRoot:
            type: object
            properties:
                root:
                    type: string
                rootIndex:
                    type: string
                rewardsCalculationEnd:
                    type: string
                    format: date-time
                rewardsCalculationEndUnit:
                    type: string
                activatedAt:
                    type: string
                    format: date-time
                activatedAtUnit:
                    type: string
                createdAtBlockNumber:
                    type: string
                transactionHash:
                    type: string
                blockHeight:
                    type: string
                logIndex:
                    type: string
                disabled:
                    type: boolean
        EarnerLeaf:
            type: object
            properties:
                earner:
                    type: string
                earnerTokenRoot:
                    type: string
                    format: bytes
        EigenStateChange:
            type: object
            properties:
                avsOperatorStateChange:
                    $ref: '#/components/schemas/AvsOperatorStateChange'
                operatorShareDelta:
                    $ref: '#/components/schemas/OperatorShareDelta'
                rewardSubmission:
                    $ref: '#/components/schemas/RewardSubmission'
                stakerDelegationChange:
                    $ref: '#/components/schemas/StakerDelegationChange'
                stakerShareDelta:
                    $ref: '#/components/schemas/StakerShareDelta'
                submittedDistributionRoot:
                    $ref: '#/components/schemas/SubmittedDistributionRoot'
                disabledDistributionRoot:
                    $ref: '#/components/schemas/DisabledDistributionRoot'
        GenerateClaimProofRequest:
            type: object
            properties:
                earnerAddress:
                    type: string
                tokens:
                    type: array
                    items:
                        type: string
                rootIndex:
                    type: string
                    description: if root_index is omitted, the current active root will be used
        GenerateClaimProofResponse:
            type: object
            properties:
                proof:
                    $ref: '#/components/schemas/Proof'
        GenerateRewardsRequest:
            type: object
            properties:
                cutoffDate:
                    type: string
                respondWithRewardsData:
                    type: boolean
                waitForComplete:
                    type: boolean
        GenerateRewardsResponse:
            type: object
            properties:
                cutoffDate:
                    type: string
                rewards:
                    allOf:
                        - $ref: '#/components/schemas/Reward'
                    description: Returned if respondWithRewardsData is true in the request
                queued:
                    type: boolean
        GenerateRewardsRootRequest:
            type: object
            properties:
                cutoffDate:
                    type: string
                    description: The date to calculate rewards up to, exclusive
        GenerateRewardsRootResponse:
            type: object
            properties:
                rewardsRoot:
                    type: string
                rewardsCalcEndDate:
                    type: string
        GenerateStakerOperatorsRequest:
            type: object
            properties:
                cutoffDate:
                    type: string
                waitForComplete:
                    type: boolean
        GenerateStakerOperatorsResponse:
            type: object
            properties:
                queued:
                    type: boolean
        GetAttributableRewardsForDistributionRootResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttributableReward'
        GetAttributableRewardsForSnapshotResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttributableReward'
        GetAvailableRewardsTokensResponse:
            type: object
            properties:
                tokens:
                    type: array
                    items:
                        type: string
        GetBlockHeightRequest:
            type: object
            properties:
                verified:
                    type: boolean
        GetBlockHeightResponse:
            type: object
            properties:
                blockNumber:
                    type: string
                blockHash:
                    type: string
        GetClaimableRewardsResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/Reward'
        GetClaimedRewardsByBlockResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/ClaimedReward'
        GetDailyAprForEarnerStrategyResponse:
            type: object
            properties:
                apr:
                    type: string
        GetDailyOperatorStrategyAprsResponse:
            type: object
            properties:
                aprs:
                    type: array
                    items:
                        $ref: '#/components/schemas/OperatorStrategyApr'
        GetDelegatedStakersForOperatorResponse:
            type: object
            properties:
                stakerAddresses:
                    type: array
                    items:
                        type: string
                nextPage:
                    $ref: '#/components/schemas/Pagination'
        GetDelegatedStrategiesForOperatorResponse:
            type: object
            properties:
                strategyAddresses:
                    type: array
                    items:
                        type: string
        GetEigenStateChangesRequest:
            type: object
            properties:
                blockHeight:
                    type: string
        GetEigenStateChangesResponse:
            type: object
            properties:
                changes:
                    type: array
                    items:
                        $ref: '#/components/schemas/EigenStateChange'
        GetOperatorDelegatedStakeForStrategyResponse:
            type: object
            properties:
                shares:
                    type: string
                avsAddresses:
                    type: array
                    items:
                        type: string
        GetRegisteredAvsForOperatorResponse:
            type: object
            properties:
                avsAddresses:
                    type: array
                    items:
                        type: string
        GetRewardsByAvsForDistributionRootResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/AvsReward'
        GetRewardsForSnapshotResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/Reward'
        GetRewardsRootResponse:
            type: object
            properties:
                rewardsRoot:
                    $ref: '#/components/schemas/DistributionRoot'
        GetStakerSharesResponse:
            type: object
            properties:
                shares:
                    type: array
                    items:
                        $ref: '#/components/schemas/StakerShare'
        GetStateRootRequest:
            type: object
            properties:
                blockNumber:
                    type: string
        GetStateRootResponse:
            type: object
            properties:
                ethBlockNumber:
                    type: string
                ethBlockHash:
                    type: string
                stateRoot:
                    type: string
        GetSummarizedRewardsForEarnerResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/SummarizedEarnerReward'
        GetTotalClaimedRewardsResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/TotalClaimedReward'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        HealthCheckResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: enum
        ListClaimedRewardsByBlockRangeResponse:
            type: object
            properties:
                rewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/ClaimedReward'
        ListDistributionRootsResponse:
            type: object
            properties:
                distributionRoots:
                    type: array
                    items:
                        $ref: '#/components/schemas/DistributionRoot'
        OperatorShareDelta:
            type: object
            properties:
                operator:
                    type: string
                staker:
                    type: string
                strategy:
                    type: string
                shares:
                    type: string
                blockTime:
                    type: string
                    format: date-time
                blockDate:
                    type: string
                transactionMetadata:
                    $ref: '#/components/schemas/TransactionMetadata'
        OperatorStrategyApr:
            type: object
            properties:
                strategy:
                    type: string
                apr:
                    type: string
        Pagination:
            type: object
            properties:
                pageNumber:
                    type: integer
                    format: uint32
                pageSize:
                    type: integer
                    format: uint32
        Proof:
            type: object
            properties:
                root:
                    type: string
                    format: bytes
                rootIndex:
                    type: integer
                    format: uint32
                earnerIndex:
                    type: integer
                    format: uint32
                earnerTreeProof:
                    type: string
                    format: bytes
                earnerLeaf:
                    $ref: '#/components/schemas/EarnerLeaf'
                tokenIndices:
                    type: array
                    items:
                        type: integer
                        format: uint32
                tokenTreeProofs:
                    type: array
                    items:
                        type: string
                        format: bytes
                tokenLeaves:
                    type: array
                    items:
                        $ref: '#/components/schemas/TokenLeaf'
            description: |-
                Proof closely models the IRewardsCoordinatorRewardsMerkleClaim interface found
                 in the RewardsCoordinator contract
        ReadyResponse:
            type: object
            properties:
                ready:
                    type: boolean
        Reward:
            type: object
            properties:
                earner:
                    type: string
                token:
                    type: string
                amount:
                    type: string
                snapshot:
                    type: string
        RewardSubmission:
            type: object
            properties:
                avs:
                    type: string
                rewardHash:
                    type: string
                token:
                    type: string
                amount:
                    type: string
                strategy:
                    type: string
                strategyIndex:
                    type: string
                multiplier:
                    type: string
                startTimestamp:
                    type: string
                    format: date-time
                endTimestamp:
                    type: string
                    format: date-time
                duration:
                    type: string
                rewardType:
                    type: integer
                    format: enum
                transactionMetadata:
                    $ref: '#/components/schemas/TransactionMetadata'
        StakerDelegationChange:
            type: object
            properties:
                staker:
                    type: string
                operator:
                    type: string
                delegated:
                    type: boolean
                transactionMetadata:
                    $ref: '#/components/schemas/TransactionMetadata'
        StakerShare:
            type: object
            properties:
                strategy:
                    type: string
                shares:
                    type: string
                operatorAddress:
                    type: string
                    description: Operator the staker has delegated to if present
                avsAddresses:
                    type: array
                    items:
                        type: string
                    description: The operator could be regietered with 0 or many AVSs
        StakerShareDelta:
            type: object
            properties:
                staker:
                    type: string
                strategy:
                    type: string
                shares:
                    type: string
                strategyIndex:
                    type: string
                blockTime:
                    type: string
                    format: date-time
                blockDate:
                    type: string
                transactionMetadata:
                    $ref: '#/components/schemas/TransactionMetadata'
        StateRoot:
            type: object
            properties:
                ethBlockNumber:
                    type: string
                ethBlockHash:
                    type: string
                stateRoot:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        StreamEigenStateChangesRequest:
            type: object
            properties: {}
        StreamEigenStateChangesResponse:
            type: object
            properties:
                blockNumber:
                    type: string
                stateRoot:
                    $ref: '#/components/schemas/StateRoot'
                changes:
                    type: array
                    items:
                        $ref: '#/components/schemas/EigenStateChange'
        StreamIndexedBlocksRequest:
            type: object
            properties:
                includeStateChanges:
                    type: boolean
                    description: In addition to block data, include EigenState changes related to the block
        StreamIndexedBlocksResponse:
            type: object
            properties:
                block:
                    $ref: '#/components/schemas/Block'
                stateRoot:
                    $ref: '#/components/schemas/StateRoot'
                changes:
                    type: array
                    items:
                        $ref: '#/components/schemas/EigenStateChange'
        SubmittedDistributionRoot:
            type: object
            properties:
                root:
                    type: string
                rootIndex:
                    type: string
                rewardsCalculationEnd:
                    type: string
                    format: date-time
                rewardsCalculationEndUnit:
                    type: string
                activatedAt:
                    type: string
                    format: date-time
                activatedAtUnit:
                    type: string
                createdAtBlockNumber:
                    type: string
                transactionMetadata:
                    $ref: '#/components/schemas/TransactionMetadata'
        SummarizedEarnerReward:
            type: object
            properties:
                token:
                    type: string
                earned:
                    type: string
                    description: Rewards that have been earned but not necessarily activated yet
                active:
                    type: string
                    description: total rewards that are claimable (does not account for claimed)
                claimed:
                    type: string
                    description: total rewards that have been claimed
                claimable:
                    type: string
                    description: rewards that can be claimed at the block height
        TokenLeaf:
            type: object
            properties:
                token:
                    type: string
                cumulativeEarnings:
                    type: string
        TotalClaimedReward:
            type: object
            properties:
                earner:
                    type: string
                token:
                    type: string
                amount:
                    type: string
        Transaction:
            type: object
            properties:
                transactionHash:
                    type: string
                transactionIndex:
                    type: string
                blockNumber:
                    type: string
                fromAddress:
                    type: string
                toAddress:
                    type: string
                contractAddress:
                    type: string
                logs:
                    type: array
                    items:
                        $ref: '#/components/schemas/TransactionLog'
        TransactionLog:
            type: object
            properties:
                transactionHash:
                    type: string
                transactionIndex:
                    type: string
                logIndex:
                    type: string
                blockNumber:
                    type: string
                address:
                    type: string
                eventName:
                    type: string
                arguments:
                    type: string
                    format: bytes
                outputData:
                    type: string
                    format: bytes
        TransactionMetadata:
            type: object
            properties:
                logIndex:
                    type: string
                transactionHash:
                    type: string
                blockHeight:
                    type: string
tags:
    - name: Aprs
    - name: Events
    - name: Health
    - name: Protocol
    - name: Rewards
    - name: Rpc
